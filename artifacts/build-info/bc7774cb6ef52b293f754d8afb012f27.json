{"id":"bc7774cb6ef52b293f754d8afb012f27","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates merkle trees that are safe\n * against this attack out of the box.\n */\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Calldata version of {verify}\n     *\n     * _Available since v4.7._\n     */\n    function verifyCalldata(\n        bytes32[] calldata proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     *\n     * _Available since v4.4._\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Calldata version of {processProof}\n     *\n     * _Available since v4.7._\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Calldata version of {multiProofVerify}\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proof.length - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value for the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            return hashes[totalHashes - 1];\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Calldata version of {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proof.length - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value for the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            return hashes[totalHashes - 1];\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\n    }\n\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"contracts/MarkleTest.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.18;\n\n// Uncomment this line to use console.log\n// import \"hardhat/console.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\n\ncontract MerkleTest {\n    constructor() {    }\n\n    function verify(\n        bytes32 root,\n        bytes32[] memory proof,\n        address addr,\n        uint256 amount\n    ) public pure returns (bool) {\n        // (2)\n        bytes32 leaf = keccak256(abi.encodePacked(addr, amount));\n        // (3)\n        require(MerkleProof.verify(proof, root, leaf), \"Invalid proof\");\n        return true;\n    }\n\n    function checkHash( address addr, uint256 amount, bytes32 leaf) public pure  returns (bool) {\n        if (leaf == keccak256(abi.encodePacked(addr, amount))) {\n            return true;\n        }\n\n        return false;\n    }\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"MerkleProof":[501]},"id":502,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"143:658:0","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates merkle trees that are safe\n against this attack out of the box."},"fullyImplemented":true,"id":501,"linearizedBaseContracts":[501],"name":"MerkleProof","nameLocation":"810:11:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":22,"nodeType":"Block","src":"1283:57:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":16,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"1313:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":17,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1320:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":15,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":18,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1300:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":19,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1329:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1300:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":14,"id":21,"nodeType":"Return","src":"1293:40:0"}]},"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"828:323:0","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."},"id":23,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1165:6:0","nodeType":"FunctionDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6,"mutability":"mutable","name":"proof","nameLocation":"1198:5:0","nodeType":"VariableDeclaration","scope":23,"src":"1181:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1181:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5,"nodeType":"ArrayTypeName","src":"1181:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":8,"mutability":"mutable","name":"root","nameLocation":"1221:4:0","nodeType":"VariableDeclaration","scope":23,"src":"1213:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1213:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":10,"mutability":"mutable","name":"leaf","nameLocation":"1243:4:0","nodeType":"VariableDeclaration","scope":23,"src":"1235:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1235:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1171:82:0"},"returnParameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":23,"src":"1277:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12,"name":"bool","nodeType":"ElementaryTypeName","src":"1277:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1276:6:0"},"scope":501,"src":"1156:184:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":43,"nodeType":"Block","src":"1578:65:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":37,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1616:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":38,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"1623:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":36,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1595:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1595:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":40,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1632:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1595:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":35,"id":42,"nodeType":"Return","src":"1588:48:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"1346:90:0","text":" @dev Calldata version of {verify}\n _Available since v4.7._"},"id":44,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"1450:14:0","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"proof","nameLocation":"1493:5:0","nodeType":"VariableDeclaration","scope":44,"src":"1474:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1474:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":26,"nodeType":"ArrayTypeName","src":"1474:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"root","nameLocation":"1516:4:0","nodeType":"VariableDeclaration","scope":44,"src":"1508:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1508:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":31,"mutability":"mutable","name":"leaf","nameLocation":"1538:4:0","nodeType":"VariableDeclaration","scope":44,"src":"1530:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1530:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1464:84:0"},"returnParameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":44,"src":"1572:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":33,"name":"bool","nodeType":"ElementaryTypeName","src":"1572:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1571:6:0"},"scope":501,"src":"1441:202:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":83,"nodeType":"Block","src":"2086:198:0","statements":[{"assignments":[56],"declarations":[{"constant":false,"id":56,"mutability":"mutable","name":"computedHash","nameLocation":"2104:12:0","nodeType":"VariableDeclaration","scope":83,"src":"2096:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":55,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2096:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":58,"initialValue":{"id":57,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"2119:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2096:27:0"},{"body":{"id":79,"nodeType":"Block","src":"2176:73:0","statements":[{"expression":{"id":77,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":70,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2190:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":72,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2215:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":73,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"2229:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":75,"indexExpression":{"id":74,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"2235:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2229:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":71,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2205:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":76,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2205:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2190:48:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":78,"nodeType":"ExpressionStatement","src":"2190:48:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":63,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":64,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"2157:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2163:6:0","memberName":"length","nodeType":"MemberAccess","src":"2157:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2153:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":80,"initializationExpression":{"assignments":[60],"declarations":[{"constant":false,"id":60,"mutability":"mutable","name":"i","nameLocation":"2146:1:0","nodeType":"VariableDeclaration","scope":80,"src":"2138:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":62,"initialValue":{"hexValue":"30","id":61,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2150:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2138:13:0"},"loopExpression":{"expression":{"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2171:3:0","subExpression":{"id":67,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"2171:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":69,"nodeType":"ExpressionStatement","src":"2171:3:0"},"nodeType":"ForStatement","src":"2133:116:0"},{"expression":{"id":81,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2265:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":54,"id":82,"nodeType":"Return","src":"2258:19:0"}]},"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"1649:340:0","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted.\n _Available since v4.4._"},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"2003:12:0","nodeType":"FunctionDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"mutability":"mutable","name":"proof","nameLocation":"2033:5:0","nodeType":"VariableDeclaration","scope":84,"src":"2016:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":46,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2016:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":47,"nodeType":"ArrayTypeName","src":"2016:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":50,"mutability":"mutable","name":"leaf","nameLocation":"2048:4:0","nodeType":"VariableDeclaration","scope":84,"src":"2040:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":49,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2040:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2015:38:0"},"returnParameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":84,"src":"2077:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":52,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2077:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2076:9:0"},"scope":501,"src":"1994:290:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":123,"nodeType":"Block","src":"2493:198:0","statements":[{"assignments":[96],"declarations":[{"constant":false,"id":96,"mutability":"mutable","name":"computedHash","nameLocation":"2511:12:0","nodeType":"VariableDeclaration","scope":123,"src":"2503:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2503:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":98,"initialValue":{"id":97,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"2526:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2503:27:0"},{"body":{"id":119,"nodeType":"Block","src":"2583:73:0","statements":[{"expression":{"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":110,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"2597:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":112,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"2622:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":113,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"2636:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":115,"indexExpression":{"id":114,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"2642:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2636:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":111,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2612:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2612:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2597:48:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":118,"nodeType":"ExpressionStatement","src":"2597:48:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":103,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"2560:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":104,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"2564:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2570:6:0","memberName":"length","nodeType":"MemberAccess","src":"2564:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2560:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"initializationExpression":{"assignments":[100],"declarations":[{"constant":false,"id":100,"mutability":"mutable","name":"i","nameLocation":"2553:1:0","nodeType":"VariableDeclaration","scope":120,"src":"2545:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":99,"name":"uint256","nodeType":"ElementaryTypeName","src":"2545:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":102,"initialValue":{"hexValue":"30","id":101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2557:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2545:13:0"},"loopExpression":{"expression":{"id":108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2578:3:0","subExpression":{"id":107,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"2578:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":109,"nodeType":"ExpressionStatement","src":"2578:3:0"},"nodeType":"ForStatement","src":"2540:116:0"},{"expression":{"id":121,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"2672:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":94,"id":122,"nodeType":"Return","src":"2665:19:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"2290:96:0","text":" @dev Calldata version of {processProof}\n _Available since v4.7._"},"id":124,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"2400:20:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"proof","nameLocation":"2440:5:0","nodeType":"VariableDeclaration","scope":124,"src":"2421:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":86,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2421:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":87,"nodeType":"ArrayTypeName","src":"2421:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":90,"mutability":"mutable","name":"leaf","nameLocation":"2455:4:0","nodeType":"VariableDeclaration","scope":124,"src":"2447:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":89,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2447:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2420:40:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":124,"src":"2484:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":92,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2484:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2483:9:0"},"scope":501,"src":"2391:300:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":149,"nodeType":"Block","src":"3234:76:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":142,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"3269:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":143,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"3276:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":144,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"3288:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":141,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"3251:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3251:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":146,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3299:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3251:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":140,"id":148,"nodeType":"Return","src":"3244:59:0"}]},"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"2697:350:0","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":150,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"3061:16:0","nodeType":"FunctionDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"mutability":"mutable","name":"proof","nameLocation":"3104:5:0","nodeType":"VariableDeclaration","scope":150,"src":"3087:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3087:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":127,"nodeType":"ArrayTypeName","src":"3087:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":131,"mutability":"mutable","name":"proofFlags","nameLocation":"3133:10:0","nodeType":"VariableDeclaration","scope":150,"src":"3119:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":129,"name":"bool","nodeType":"ElementaryTypeName","src":"3119:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":130,"nodeType":"ArrayTypeName","src":"3119:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"root","nameLocation":"3161:4:0","nodeType":"VariableDeclaration","scope":150,"src":"3153:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3153:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"leaves","nameLocation":"3192:6:0","nodeType":"VariableDeclaration","scope":150,"src":"3175:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3175:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":135,"nodeType":"ArrayTypeName","src":"3175:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3077:127:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":150,"src":"3228:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":138,"name":"bool","nodeType":"ElementaryTypeName","src":"3228:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3227:6:0"},"scope":501,"src":"3052:258:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":175,"nodeType":"Block","src":"3715:84:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":168,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"3758:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":169,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"3765:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":170,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"3777:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":167,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"3732:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3732:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":172,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"3788:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3732:60:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":166,"id":174,"nodeType":"Return","src":"3725:67:0"}]},"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"3316:200:0","text":" @dev Calldata version of {multiProofVerify}\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"3530:24:0","nodeType":"FunctionDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"mutability":"mutable","name":"proof","nameLocation":"3583:5:0","nodeType":"VariableDeclaration","scope":176,"src":"3564:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3564:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":153,"nodeType":"ArrayTypeName","src":"3564:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"proofFlags","nameLocation":"3614:10:0","nodeType":"VariableDeclaration","scope":176,"src":"3598:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":155,"name":"bool","nodeType":"ElementaryTypeName","src":"3598:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":156,"nodeType":"ArrayTypeName","src":"3598:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":159,"mutability":"mutable","name":"root","nameLocation":"3642:4:0","nodeType":"VariableDeclaration","scope":176,"src":"3634:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3634:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"leaves","nameLocation":"3673:6:0","nodeType":"VariableDeclaration","scope":176,"src":"3656:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3656:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":161,"nodeType":"ArrayTypeName","src":"3656:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3554:131:0"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":176,"src":"3709:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":164,"name":"bool","nodeType":"ElementaryTypeName","src":"3709:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3708:6:0"},"scope":501,"src":"3521:278:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":320,"nodeType":"Block","src":"4753:1860:0","statements":[{"assignments":[192],"declarations":[{"constant":false,"id":192,"mutability":"mutable","name":"leavesLen","nameLocation":"5144:9:0","nodeType":"VariableDeclaration","scope":320,"src":"5136:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"5136:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":195,"initialValue":{"expression":{"id":193,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"5156:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5163:6:0","memberName":"length","nodeType":"MemberAccess","src":"5156:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5136:33:0"},{"assignments":[197],"declarations":[{"constant":false,"id":197,"mutability":"mutable","name":"totalHashes","nameLocation":"5187:11:0","nodeType":"VariableDeclaration","scope":320,"src":"5179:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"5179:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":200,"initialValue":{"expression":{"id":198,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"5201:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5212:6:0","memberName":"length","nodeType":"MemberAccess","src":"5201:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5179:39:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":202,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5270:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":203,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"5282:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:6:0","memberName":"length","nodeType":"MemberAccess","src":"5282:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5270:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5270:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":208,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"5302:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5270:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5315:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":201,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5262:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:87:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":212,"nodeType":"ExpressionStatement","src":"5262:87:0"},{"assignments":[217],"declarations":[{"constant":false,"id":217,"mutability":"mutable","name":"hashes","nameLocation":"5611:6:0","nodeType":"VariableDeclaration","scope":320,"src":"5594:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5594:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":216,"nodeType":"ArrayTypeName","src":"5594:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":223,"initialValue":{"arguments":[{"id":221,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"5634:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5620:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5624:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":219,"nodeType":"ArrayTypeName","src":"5624:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5620:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5594:52:0"},{"assignments":[225],"declarations":[{"constant":false,"id":225,"mutability":"mutable","name":"leafPos","nameLocation":"5664:7:0","nodeType":"VariableDeclaration","scope":320,"src":"5656:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"5656:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":227,"initialValue":{"hexValue":"30","id":226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5674:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5656:19:0"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"hashPos","nameLocation":"5693:7:0","nodeType":"VariableDeclaration","scope":320,"src":"5685:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":228,"name":"uint256","nodeType":"ElementaryTypeName","src":"5685:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":231,"initialValue":{"hexValue":"30","id":230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5703:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5685:19:0"},{"assignments":[233],"declarations":[{"constant":false,"id":233,"mutability":"mutable","name":"proofPos","nameLocation":"5722:8:0","nodeType":"VariableDeclaration","scope":320,"src":"5714:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"5714:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":235,"initialValue":{"hexValue":"30","id":234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5733:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5714:20:0"},{"body":{"id":293,"nodeType":"Block","src":"6151:258:0","statements":[{"assignments":[247],"declarations":[{"constant":false,"id":247,"mutability":"mutable","name":"a","nameLocation":"6173:1:0","nodeType":"VariableDeclaration","scope":293,"src":"6165:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6165:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":260,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":248,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"6177:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":249,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"6187:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6177:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":255,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"6219:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":258,"indexExpression":{"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6226:9:0","subExpression":{"id":256,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"6226:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6219:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6177:59:0","trueExpression":{"baseExpression":{"id":251,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"6199:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":254,"indexExpression":{"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6206:9:0","subExpression":{"id":252,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"6206:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6199:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6165:71:0"},{"assignments":[262],"declarations":[{"constant":false,"id":262,"mutability":"mutable","name":"b","nameLocation":"6258:1:0","nodeType":"VariableDeclaration","scope":293,"src":"6250:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":261,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6250:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":283,"initialValue":{"condition":{"baseExpression":{"id":263,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"6262:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":265,"indexExpression":{"id":264,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6273:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6262:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":278,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"6340:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":281,"indexExpression":{"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6346:10:0","subExpression":{"id":279,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"6346:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6340:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6262:95:0","trueExpression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":266,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"6278:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":267,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"6288:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6278:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":273,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"6320:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":276,"indexExpression":{"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6327:9:0","subExpression":{"id":274,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"6327:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6320:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6278:59:0","trueExpression":{"baseExpression":{"id":269,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"6300:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":272,"indexExpression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6307:9:0","subExpression":{"id":270,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"6307:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6300:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6250:107:0"},{"expression":{"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":284,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"6371:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":286,"indexExpression":{"id":285,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6378:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6371:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":288,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"6393:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":289,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6396:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":287,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"6383:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6383:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6371:27:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":292,"nodeType":"ExpressionStatement","src":"6371:27:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":240,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6129:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":241,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"6133:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6129:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"initializationExpression":{"assignments":[237],"declarations":[{"constant":false,"id":237,"mutability":"mutable","name":"i","nameLocation":"6122:1:0","nodeType":"VariableDeclaration","scope":294,"src":"6114:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":236,"name":"uint256","nodeType":"ElementaryTypeName","src":"6114:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":239,"initialValue":{"hexValue":"30","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6126:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6114:13:0"},"loopExpression":{"expression":{"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6146:3:0","subExpression":{"id":243,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6146:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":245,"nodeType":"ExpressionStatement","src":"6146:3:0"},"nodeType":"ForStatement","src":"6109:300:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":295,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"6423:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6437:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6423:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":305,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"6505:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6517:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6505:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":317,"nodeType":"Block","src":"6567:40:0","statements":[{"expression":{"baseExpression":{"id":313,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"6588:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":315,"indexExpression":{"hexValue":"30","id":314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6594:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6588:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":190,"id":316,"nodeType":"Return","src":"6581:15:0"}]},"id":318,"nodeType":"IfStatement","src":"6501:106:0","trueBody":{"id":312,"nodeType":"Block","src":"6520:41:0","statements":[{"expression":{"baseExpression":{"id":308,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"6541:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":310,"indexExpression":{"hexValue":"30","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6548:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6541:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":190,"id":311,"nodeType":"Return","src":"6534:16:0"}]}},"id":319,"nodeType":"IfStatement","src":"6419:188:0","trueBody":{"id":304,"nodeType":"Block","src":"6440:55:0","statements":[{"expression":{"baseExpression":{"id":298,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"6461:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":302,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":299,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"6468:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6482:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6468:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6461:23:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":190,"id":303,"nodeType":"Return","src":"6454:30:0"}]}}]},"documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"3805:768:0","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n _Available since v4.7._"},"id":321,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"4587:17:0","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"proof","nameLocation":"4631:5:0","nodeType":"VariableDeclaration","scope":321,"src":"4614:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4614:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":179,"nodeType":"ArrayTypeName","src":"4614:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":183,"mutability":"mutable","name":"proofFlags","nameLocation":"4660:10:0","nodeType":"VariableDeclaration","scope":321,"src":"4646:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":181,"name":"bool","nodeType":"ElementaryTypeName","src":"4646:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"ArrayTypeName","src":"4646:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"leaves","nameLocation":"4697:6:0","nodeType":"VariableDeclaration","scope":321,"src":"4680:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4680:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":185,"nodeType":"ArrayTypeName","src":"4680:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4604:105:0"},"returnParameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"merkleRoot","nameLocation":"4741:10:0","nodeType":"VariableDeclaration","scope":321,"src":"4733:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4733:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4732:20:0"},"scope":501,"src":"4578:2035:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":465,"nodeType":"Block","src":"7013:1860:0","statements":[{"assignments":[337],"declarations":[{"constant":false,"id":337,"mutability":"mutable","name":"leavesLen","nameLocation":"7404:9:0","nodeType":"VariableDeclaration","scope":465,"src":"7396:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"7396:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":340,"initialValue":{"expression":{"id":338,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"7416:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7423:6:0","memberName":"length","nodeType":"MemberAccess","src":"7416:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7396:33:0"},{"assignments":[342],"declarations":[{"constant":false,"id":342,"mutability":"mutable","name":"totalHashes","nameLocation":"7447:11:0","nodeType":"VariableDeclaration","scope":465,"src":"7439:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"7439:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":345,"initialValue":{"expression":{"id":343,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"7461:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7472:6:0","memberName":"length","nodeType":"MemberAccess","src":"7461:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7439:39:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":347,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"7530:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":348,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"7542:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7548:6:0","memberName":"length","nodeType":"MemberAccess","src":"7542:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7530:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7557:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7530:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":353,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"7562:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7530:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7575:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":346,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7522:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7522:87:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":357,"nodeType":"ExpressionStatement","src":"7522:87:0"},{"assignments":[362],"declarations":[{"constant":false,"id":362,"mutability":"mutable","name":"hashes","nameLocation":"7871:6:0","nodeType":"VariableDeclaration","scope":465,"src":"7854:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7854:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":361,"nodeType":"ArrayTypeName","src":"7854:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":368,"initialValue":{"arguments":[{"id":366,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"7894:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7880:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7884:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":364,"nodeType":"ArrayTypeName","src":"7884:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7880:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7854:52:0"},{"assignments":[370],"declarations":[{"constant":false,"id":370,"mutability":"mutable","name":"leafPos","nameLocation":"7924:7:0","nodeType":"VariableDeclaration","scope":465,"src":"7916:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":369,"name":"uint256","nodeType":"ElementaryTypeName","src":"7916:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":372,"initialValue":{"hexValue":"30","id":371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7934:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7916:19:0"},{"assignments":[374],"declarations":[{"constant":false,"id":374,"mutability":"mutable","name":"hashPos","nameLocation":"7953:7:0","nodeType":"VariableDeclaration","scope":465,"src":"7945:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":373,"name":"uint256","nodeType":"ElementaryTypeName","src":"7945:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":376,"initialValue":{"hexValue":"30","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7945:19:0"},{"assignments":[378],"declarations":[{"constant":false,"id":378,"mutability":"mutable","name":"proofPos","nameLocation":"7982:8:0","nodeType":"VariableDeclaration","scope":465,"src":"7974:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"7974:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":380,"initialValue":{"hexValue":"30","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7993:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7974:20:0"},{"body":{"id":438,"nodeType":"Block","src":"8411:258:0","statements":[{"assignments":[392],"declarations":[{"constant":false,"id":392,"mutability":"mutable","name":"a","nameLocation":"8433:1:0","nodeType":"VariableDeclaration","scope":438,"src":"8425:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8425:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":405,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":393,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"8437:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":394,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"8447:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8437:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":400,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"8479:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":403,"indexExpression":{"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8486:9:0","subExpression":{"id":401,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"8486:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8479:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:59:0","trueExpression":{"baseExpression":{"id":396,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"8459:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":399,"indexExpression":{"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8466:9:0","subExpression":{"id":397,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"8466:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8459:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8425:71:0"},{"assignments":[407],"declarations":[{"constant":false,"id":407,"mutability":"mutable","name":"b","nameLocation":"8518:1:0","nodeType":"VariableDeclaration","scope":438,"src":"8510:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":406,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8510:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":428,"initialValue":{"condition":{"baseExpression":{"id":408,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"8522:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":410,"indexExpression":{"id":409,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"8533:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8522:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":423,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"8600:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":426,"indexExpression":{"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8606:10:0","subExpression":{"id":424,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"8606:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8600:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8522:95:0","trueExpression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":411,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"8538:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":412,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"8548:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8538:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":418,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"8580:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":421,"indexExpression":{"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8587:9:0","subExpression":{"id":419,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"8587:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8580:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8538:59:0","trueExpression":{"baseExpression":{"id":414,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"8560:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":417,"indexExpression":{"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8567:9:0","subExpression":{"id":415,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"8567:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8560:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8510:107:0"},{"expression":{"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":429,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"8631:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":431,"indexExpression":{"id":430,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"8638:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8631:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":433,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"8653:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":434,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"8656:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":432,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8643:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8643:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8631:27:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":437,"nodeType":"ExpressionStatement","src":"8631:27:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":385,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"8389:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":386,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"8393:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8389:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":439,"initializationExpression":{"assignments":[382],"declarations":[{"constant":false,"id":382,"mutability":"mutable","name":"i","nameLocation":"8382:1:0","nodeType":"VariableDeclaration","scope":439,"src":"8374:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":381,"name":"uint256","nodeType":"ElementaryTypeName","src":"8374:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":384,"initialValue":{"hexValue":"30","id":383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8386:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8374:13:0"},"loopExpression":{"expression":{"id":389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8406:3:0","subExpression":{"id":388,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"8406:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":390,"nodeType":"ExpressionStatement","src":"8406:3:0"},"nodeType":"ForStatement","src":"8369:300:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":440,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"8683:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8683:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":450,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"8765:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8777:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8765:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":462,"nodeType":"Block","src":"8827:40:0","statements":[{"expression":{"baseExpression":{"id":458,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"8848:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":460,"indexExpression":{"hexValue":"30","id":459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8848:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":335,"id":461,"nodeType":"Return","src":"8841:15:0"}]},"id":463,"nodeType":"IfStatement","src":"8761:106:0","trueBody":{"id":457,"nodeType":"Block","src":"8780:41:0","statements":[{"expression":{"baseExpression":{"id":453,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"8801:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":455,"indexExpression":{"hexValue":"30","id":454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8808:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8801:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":335,"id":456,"nodeType":"Return","src":"8794:16:0"}]}},"id":464,"nodeType":"IfStatement","src":"8679:188:0","trueBody":{"id":449,"nodeType":"Block","src":"8700:55:0","statements":[{"expression":{"baseExpression":{"id":443,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"8721:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":447,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":444,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"8728:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8742:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8728:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8721:23:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":335,"id":448,"nodeType":"Return","src":"8714:30:0"}]}}]},"documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"6619:202:0","text":" @dev Calldata version of {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":466,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"6835:25:0","nodeType":"FunctionDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"proof","nameLocation":"6889:5:0","nodeType":"VariableDeclaration","scope":466,"src":"6870:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6870:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":324,"nodeType":"ArrayTypeName","src":"6870:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":328,"mutability":"mutable","name":"proofFlags","nameLocation":"6920:10:0","nodeType":"VariableDeclaration","scope":466,"src":"6904:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":326,"name":"bool","nodeType":"ElementaryTypeName","src":"6904:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":327,"nodeType":"ArrayTypeName","src":"6904:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"leaves","nameLocation":"6957:6:0","nodeType":"VariableDeclaration","scope":466,"src":"6940:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6940:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":330,"nodeType":"ArrayTypeName","src":"6940:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6860:109:0"},"returnParameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"merkleRoot","nameLocation":"7001:10:0","nodeType":"VariableDeclaration","scope":466,"src":"6993:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":333,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6993:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6992:20:0"},"scope":501,"src":"6826:2047:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":488,"nodeType":"Block","src":"8951:75:0","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":475,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"8968:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":476,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"8972:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8968:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":483,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"9014:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":484,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"9017:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":482,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"8999:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8999:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8968:51:0","trueExpression":{"arguments":[{"id":479,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"8991:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":480,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"8994:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":478,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"8976:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":474,"id":487,"nodeType":"Return","src":"8961:58:0"}]},"id":489,"implemented":true,"kind":"function","modifiers":[],"name":"_hashPair","nameLocation":"8888:9:0","nodeType":"FunctionDefinition","parameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"a","nameLocation":"8906:1:0","nodeType":"VariableDeclaration","scope":489,"src":"8898:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8898:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":470,"mutability":"mutable","name":"b","nameLocation":"8917:1:0","nodeType":"VariableDeclaration","scope":489,"src":"8909:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":469,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8909:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8897:22:0"},"returnParameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":489,"src":"8942:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8942:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8941:9:0"},"scope":501,"src":"8879:147:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":499,"nodeType":"Block","src":"9115:178:0","statements":[{"AST":{"nodeType":"YulBlock","src":"9177:110:0","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9198:4:0","type":"","value":"0x00"},{"name":"a","nodeType":"YulIdentifier","src":"9204:1:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9191:6:0"},"nodeType":"YulFunctionCall","src":"9191:15:0"},"nodeType":"YulExpressionStatement","src":"9191:15:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9226:4:0","type":"","value":"0x20"},{"name":"b","nodeType":"YulIdentifier","src":"9232:1:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9219:6:0"},"nodeType":"YulFunctionCall","src":"9219:15:0"},"nodeType":"YulExpressionStatement","src":"9219:15:0"},{"nodeType":"YulAssignment","src":"9247:30:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9266:4:0","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"9272:4:0","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9256:9:0"},"nodeType":"YulFunctionCall","src":"9256:21:0"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9247:5:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":491,"isOffset":false,"isSlot":false,"src":"9204:1:0","valueSize":1},{"declaration":493,"isOffset":false,"isSlot":false,"src":"9232:1:0","valueSize":1},{"declaration":496,"isOffset":false,"isSlot":false,"src":"9247:5:0","valueSize":1}],"id":498,"nodeType":"InlineAssembly","src":"9168:119:0"}]},"id":500,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientHash","nameLocation":"9041:14:0","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"a","nameLocation":"9064:1:0","nodeType":"VariableDeclaration","scope":500,"src":"9056:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9056:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":493,"mutability":"mutable","name":"b","nameLocation":"9075:1:0","nodeType":"VariableDeclaration","scope":500,"src":"9067:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9067:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9055:22:0"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"value","nameLocation":"9108:5:0","nodeType":"VariableDeclaration","scope":500,"src":"9100:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9100:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9099:15:0"},"scope":501,"src":"9032:261:0","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":502,"src":"802:8493:0","usedErrors":[]}],"src":"118:9178:0"},"id":0},"contracts/MarkleTest.sol":{"ast":{"absolutePath":"contracts/MarkleTest.sol","exportedSymbols":{"MerkleProof":[501],"MerkleTest":[573]},"id":574,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":503,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"39:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":504,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":574,"sourceUnit":502,"src":"140:68:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleTest","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":573,"linearizedBaseContracts":[573],"name":"MerkleTest","nameLocation":"219:10:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":507,"nodeType":"Block","src":"250:6:1","statements":[]},"id":508,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":505,"nodeType":"ParameterList","parameters":[],"src":"247:2:1"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"250:0:1"},"scope":573,"src":"236:20:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":544,"nodeType":"Block","src":"411:197:1","statements":[{"assignments":[523],"declarations":[{"constant":false,"id":523,"mutability":"mutable","name":"leaf","nameLocation":"444:4:1","nodeType":"VariableDeclaration","scope":544,"src":"436:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"436:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":531,"initialValue":{"arguments":[{"arguments":[{"id":527,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"478:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":528,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"484:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":525,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"461:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"465:12:1","memberName":"encodePacked","nodeType":"MemberAccess","src":"461:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"461:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":524,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"451:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"451:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"436:56:1"},{"expression":{"arguments":[{"arguments":[{"id":535,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"544:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":536,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"551:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":537,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"557:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":533,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"525:11:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$501_$","typeString":"type(library MerkleProof)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"537:6:1","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":23,"src":"525:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"525:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726f6f66","id":539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"564:15:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639","typeString":"literal_string \"Invalid proof\""},"value":"Invalid proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639","typeString":"literal_string \"Invalid proof\""}],"id":532,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"517:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"517:63:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":541,"nodeType":"ExpressionStatement","src":"517:63:1"},{"expression":{"hexValue":"74727565","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"597:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":521,"id":543,"nodeType":"Return","src":"590:11:1"}]},"functionSelector":"cff144f7","id":545,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"271:6:1","nodeType":"FunctionDefinition","parameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"root","nameLocation":"295:4:1","nodeType":"VariableDeclaration","scope":545,"src":"287:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":509,"name":"bytes32","nodeType":"ElementaryTypeName","src":"287:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":513,"mutability":"mutable","name":"proof","nameLocation":"326:5:1","nodeType":"VariableDeclaration","scope":545,"src":"309:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"309:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":512,"nodeType":"ArrayTypeName","src":"309:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"addr","nameLocation":"349:4:1","nodeType":"VariableDeclaration","scope":545,"src":"341:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"341:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":517,"mutability":"mutable","name":"amount","nameLocation":"371:6:1","nodeType":"VariableDeclaration","scope":545,"src":"363:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":516,"name":"uint256","nodeType":"ElementaryTypeName","src":"363:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"277:106:1"},"returnParameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":545,"src":"405:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":519,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:1"},"scope":573,"src":"262:346:1","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":571,"nodeType":"Block","src":"706:130:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":556,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"720:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":560,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"755:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":561,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"761:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":558,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"738:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"742:12:1","memberName":"encodePacked","nodeType":"MemberAccess","src":"738:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"738:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":557,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"728:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"728:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"720:49:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":568,"nodeType":"IfStatement","src":"716:91:1","trueBody":{"id":567,"nodeType":"Block","src":"771:36:1","statements":[{"expression":{"hexValue":"74727565","id":565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":555,"id":566,"nodeType":"Return","src":"785:11:1"}]}},{"expression":{"hexValue":"66616c7365","id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"824:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":555,"id":570,"nodeType":"Return","src":"817:12:1"}]},"functionSelector":"235019a0","id":572,"implemented":true,"kind":"function","modifiers":[],"name":"checkHash","nameLocation":"623:9:1","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"mutability":"mutable","name":"addr","nameLocation":"642:4:1","nodeType":"VariableDeclaration","scope":572,"src":"634:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"amount","nameLocation":"656:6:1","nodeType":"VariableDeclaration","scope":572,"src":"648:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"648:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"leaf","nameLocation":"672:4:1","nodeType":"VariableDeclaration","scope":572,"src":"664:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"632:45:1"},"returnParameters":{"id":555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":572,"src":"700:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":553,"name":"bool","nodeType":"ElementaryTypeName","src":"700:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"699:6:1"},"scope":573,"src":"614:222:1","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":574,"src":"210:628:1","usedErrors":[]}],"src":"39:799:1"},"id":1}},"contracts":{"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d2a153feada95be3c5edb9706b6dd1d247d7839e4031fa1ea53b5b1fc75a945d64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 LOG1 MSTORE8 INVALID 0xAD 0xA9 JUMPDEST 0xE3 0xC5 0xED 0xB9 PUSH17 0x6B6DD1D247D7839E4031FA1EA53B5B1FC7 GAS SWAP5 0x5D PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"802:8493:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d2a153feada95be3c5edb9706b6dd1d247d7839e4031fa1ea53b5b1fc75a945d64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 LOG1 MSTORE8 INVALID 0xAD 0xA9 JUMPDEST 0xE3 0xC5 0xED 0xB9 PUSH17 0x6B6DD1D247D7839E4031FA1EA53B5B1FC7 GAS SWAP5 0x5D PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"802:8493:0:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates merkle trees that are safe against this attack out of the box.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xd466e8b07f4c6220eac16da5127f3ff142e65f0c15c03c7d38f257b02c8585e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6b3cab69f655e40117bbdd8e68d7423f26d1b24248fb189c295f08de8940616\",\"dweb:/ipfs/QmWoyRthsBDMa7gJpH5UCjpa8uNUQfyaGbSgY3uvhBH9F3\"]}},\"version\":1}"}},"contracts/MarkleTest.sol":{"MerkleTest":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"leaf","type":"bytes32"}],"name":"checkHash","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"verify","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_508":{"entryPoint":null,"id":508,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610746806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063235019a01461003b578063cff144f71461006b575b600080fd5b610055600480360381019061005091906102f3565b61009b565b6040516100629190610361565b60405180910390f35b610085600480360381019061008091906104d5565b6100e1565b6040516100929190610361565b60405180910390f35b600083836040516020016100b09291906105c1565b6040516020818303038152906040528051906020012082036100d557600190506100da565b600090505b9392505050565b60008083836040516020016100f79291906105c1565b60405160208183030381529060405280519060200120905061011a858783610166565b610159576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101509061064a565b60405180910390fd5b6001915050949350505050565b600082610173858461017d565b1490509392505050565b60008082905060005b84518110156101c8576101b3828683815181106101a6576101a561066a565b5b60200260200101516101d3565b915080806101c0906106c8565b915050610186565b508091505092915050565b60008183106101eb576101e682846101fe565b6101f6565b6101f583836101fe565b5b905092915050565b600082600052816020526040600020905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061025482610229565b9050919050565b61026481610249565b811461026f57600080fd5b50565b6000813590506102818161025b565b92915050565b6000819050919050565b61029a81610287565b81146102a557600080fd5b50565b6000813590506102b781610291565b92915050565b6000819050919050565b6102d0816102bd565b81146102db57600080fd5b50565b6000813590506102ed816102c7565b92915050565b60008060006060848603121561030c5761030b61021f565b5b600061031a86828701610272565b935050602061032b868287016102a8565b925050604061033c868287016102de565b9150509250925092565b60008115159050919050565b61035b81610346565b82525050565b60006020820190506103766000830184610352565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103ca82610381565b810181811067ffffffffffffffff821117156103e9576103e8610392565b5b80604052505050565b60006103fc610215565b905061040882826103c1565b919050565b600067ffffffffffffffff82111561042857610427610392565b5b602082029050602081019050919050565b600080fd5b600061045161044c8461040d565b6103f2565b9050808382526020820190506020840283018581111561047457610473610439565b5b835b8181101561049d578061048988826102de565b845260208401935050602081019050610476565b5050509392505050565b600082601f8301126104bc576104bb61037c565b5b81356104cc84826020860161043e565b91505092915050565b600080600080608085870312156104ef576104ee61021f565b5b60006104fd878288016102de565b945050602085013567ffffffffffffffff81111561051e5761051d610224565b5b61052a878288016104a7565b935050604061053b87828801610272565b925050606061054c878288016102a8565b91505092959194509250565b60008160601b9050919050565b600061057082610558565b9050919050565b600061058282610565565b9050919050565b61059a61059582610249565b610577565b82525050565b6000819050919050565b6105bb6105b682610287565b6105a0565b82525050565b60006105cd8285610589565b6014820191506105dd82846105aa565b6020820191508190509392505050565b600082825260208201905092915050565b7f496e76616c69642070726f6f6600000000000000000000000000000000000000600082015250565b6000610634600d836105ed565b915061063f826105fe565b602082019050919050565b6000602082019050818103600083015261066381610627565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106d382610287565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361070557610704610699565b5b60018201905091905056fea264697066735822122050b96d7327bce5cafdcad09d6bf4040589b8e524cb1df74ce30b967f22603d8f64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x746 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x235019A0 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xCFF144F7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x361 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x361 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB0 SWAP3 SWAP2 SWAP1 PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 SUB PUSH2 0xD5 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xDA JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF7 SWAP3 SWAP2 SWAP1 PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x11A DUP6 DUP8 DUP4 PUSH2 0x166 JUMP JUMPDEST PUSH2 0x159 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150 SWAP1 PUSH2 0x64A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x173 DUP6 DUP5 PUSH2 0x17D JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1C8 JUMPI PUSH2 0x1B3 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1A6 JUMPI PUSH2 0x1A5 PUSH2 0x66A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D3 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x1C0 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x186 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1EB JUMPI PUSH2 0x1E6 DUP3 DUP5 PUSH2 0x1FE JUMP JUMPDEST PUSH2 0x1F6 JUMP JUMPDEST PUSH2 0x1F5 DUP4 DUP4 PUSH2 0x1FE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x254 DUP3 PUSH2 0x229 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x264 DUP2 PUSH2 0x249 JUMP JUMPDEST DUP2 EQ PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x281 DUP2 PUSH2 0x25B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29A DUP2 PUSH2 0x287 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B7 DUP2 PUSH2 0x291 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D0 DUP2 PUSH2 0x2BD JUMP JUMPDEST DUP2 EQ PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2ED DUP2 PUSH2 0x2C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x30C JUMPI PUSH2 0x30B PUSH2 0x21F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31A DUP7 DUP3 DUP8 ADD PUSH2 0x272 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x32B DUP7 DUP3 DUP8 ADD PUSH2 0x2A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x33C DUP7 DUP3 DUP8 ADD PUSH2 0x2DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x35B DUP2 PUSH2 0x346 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x376 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x352 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3CA DUP3 PUSH2 0x381 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3E9 JUMPI PUSH2 0x3E8 PUSH2 0x392 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FC PUSH2 0x215 JUMP JUMPDEST SWAP1 POP PUSH2 0x408 DUP3 DUP3 PUSH2 0x3C1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x428 JUMPI PUSH2 0x427 PUSH2 0x392 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x451 PUSH2 0x44C DUP5 PUSH2 0x40D JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x474 JUMPI PUSH2 0x473 PUSH2 0x439 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x49D JUMPI DUP1 PUSH2 0x489 DUP9 DUP3 PUSH2 0x2DE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x476 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4BC JUMPI PUSH2 0x4BB PUSH2 0x37C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4CC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x43E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4EF JUMPI PUSH2 0x4EE PUSH2 0x21F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4FD DUP8 DUP3 DUP9 ADD PUSH2 0x2DE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x51E JUMPI PUSH2 0x51D PUSH2 0x224 JUMP JUMPDEST JUMPDEST PUSH2 0x52A DUP8 DUP3 DUP9 ADD PUSH2 0x4A7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x53B DUP8 DUP3 DUP9 ADD PUSH2 0x272 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x54C DUP8 DUP3 DUP9 ADD PUSH2 0x2A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x570 DUP3 PUSH2 0x558 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x582 DUP3 PUSH2 0x565 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x59A PUSH2 0x595 DUP3 PUSH2 0x249 JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5BB PUSH2 0x5B6 DUP3 PUSH2 0x287 JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CD DUP3 DUP6 PUSH2 0x589 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x5DD DUP3 DUP5 PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642070726F6F6600000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x634 PUSH1 0xD DUP4 PUSH2 0x5ED JUMP JUMPDEST SWAP2 POP PUSH2 0x63F DUP3 PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x663 DUP2 PUSH2 0x627 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6D3 DUP3 PUSH2 0x287 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x705 JUMPI PUSH2 0x704 PUSH2 0x699 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xB9 PUSH14 0x7327BCE5CAFDCAD09D6BF4040589 0xB8 0xE5 0x24 0xCB SAR 0xF7 0x4C 0xE3 SIGNEXTEND SWAP7 PUSH32 0x22603D8F64736F6C634300081200330000000000000000000000000000000000 ","sourceMap":"210:628:1:-:0;;;236:20;;;;;;;;;;210:628;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_efficientHash_500":{"entryPoint":510,"id":500,"parameterSlots":2,"returnSlots":1},"@_hashPair_489":{"entryPoint":467,"id":489,"parameterSlots":2,"returnSlots":1},"@checkHash_572":{"entryPoint":155,"id":572,"parameterSlots":3,"returnSlots":1},"@processProof_84":{"entryPoint":381,"id":84,"parameterSlots":2,"returnSlots":1},"@verify_23":{"entryPoint":358,"id":23,"parameterSlots":3,"returnSlots":1},"@verify_545":{"entryPoint":225,"id":545,"parameterSlots":4,"returnSlots":1},"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":1086,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":626,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":1191,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":734,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":680,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_bytes32":{"entryPoint":755,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_array$_t_bytes32_$dyn_memory_ptrt_addresst_uint256":{"entryPoint":1237,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":1417,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":850,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639_to_t_string_memory_ptr_fromStack":{"entryPoint":1575,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":1450,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":1473,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":865,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1610,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":1010,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":533,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":1037,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1517,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":585,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":838,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":701,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":553,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":647,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":961,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":1736,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":1399,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":1381,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":1440,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1689,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":1642,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":914,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":892,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":1081,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":548,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":543,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":897,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":1368,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639":{"entryPoint":1534,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":603,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":711,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":657,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8860:2","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:2","statements":[{"nodeType":"YulAssignment","src":"57:19:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:2","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:2"},"nodeType":"YulFunctionCall","src":"67:9:2"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:2"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:2","type":""}],"src":"7:75:2"},{"body":{"nodeType":"YulBlock","src":"177:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:2"},"nodeType":"YulFunctionCall","src":"187:12:2"},"nodeType":"YulExpressionStatement","src":"187:12:2"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:2"},{"body":{"nodeType":"YulBlock","src":"300:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:2"},"nodeType":"YulFunctionCall","src":"310:12:2"},"nodeType":"YulExpressionStatement","src":"310:12:2"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:2"},{"body":{"nodeType":"YulBlock","src":"379:81:2","statements":[{"nodeType":"YulAssignment","src":"389:65:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:2","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:2"},"nodeType":"YulFunctionCall","src":"400:54:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:2"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:2","type":""}],"src":"334:126:2"},{"body":{"nodeType":"YulBlock","src":"511:51:2","statements":[{"nodeType":"YulAssignment","src":"521:35:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:2"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:2"},"nodeType":"YulFunctionCall","src":"532:24:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:2"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:2","type":""}],"src":"466:96:2"},{"body":{"nodeType":"YulBlock","src":"611:79:2","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:2"},"nodeType":"YulFunctionCall","src":"670:12:2"},"nodeType":"YulExpressionStatement","src":"670:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:2"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:2"},"nodeType":"YulFunctionCall","src":"641:24:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:2"},"nodeType":"YulFunctionCall","src":"631:35:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:2"},"nodeType":"YulFunctionCall","src":"624:43:2"},"nodeType":"YulIf","src":"621:63:2"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:2","type":""}],"src":"568:122:2"},{"body":{"nodeType":"YulBlock","src":"748:87:2","statements":[{"nodeType":"YulAssignment","src":"758:29:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:2"},"nodeType":"YulFunctionCall","src":"767:20:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:2"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:2"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:2"},"nodeType":"YulFunctionCall","src":"796:33:2"},"nodeType":"YulExpressionStatement","src":"796:33:2"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:2","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:2","type":""}],"src":"696:139:2"},{"body":{"nodeType":"YulBlock","src":"886:32:2","statements":[{"nodeType":"YulAssignment","src":"896:16:2","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:2"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:2","type":""}],"src":"841:77:2"},{"body":{"nodeType":"YulBlock","src":"967:79:2","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:2"},"nodeType":"YulFunctionCall","src":"1026:12:2"},"nodeType":"YulExpressionStatement","src":"1026:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:2"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:2"},"nodeType":"YulFunctionCall","src":"997:24:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:2"},"nodeType":"YulFunctionCall","src":"987:35:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:2"},"nodeType":"YulFunctionCall","src":"980:43:2"},"nodeType":"YulIf","src":"977:63:2"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:2","type":""}],"src":"924:122:2"},{"body":{"nodeType":"YulBlock","src":"1104:87:2","statements":[{"nodeType":"YulAssignment","src":"1114:29:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:2"},"nodeType":"YulFunctionCall","src":"1123:20:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:2"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:2"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:2"},"nodeType":"YulFunctionCall","src":"1152:33:2"},"nodeType":"YulExpressionStatement","src":"1152:33:2"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:2","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:2","type":""}],"src":"1052:139:2"},{"body":{"nodeType":"YulBlock","src":"1242:32:2","statements":[{"nodeType":"YulAssignment","src":"1252:16:2","value":{"name":"value","nodeType":"YulIdentifier","src":"1263:5:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1252:7:2"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1224:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1234:7:2","type":""}],"src":"1197:77:2"},{"body":{"nodeType":"YulBlock","src":"1323:79:2","statements":[{"body":{"nodeType":"YulBlock","src":"1380:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1389:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1392:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1382:6:2"},"nodeType":"YulFunctionCall","src":"1382:12:2"},"nodeType":"YulExpressionStatement","src":"1382:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1346:5:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1371:5:2"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1353:17:2"},"nodeType":"YulFunctionCall","src":"1353:24:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1343:2:2"},"nodeType":"YulFunctionCall","src":"1343:35:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1336:6:2"},"nodeType":"YulFunctionCall","src":"1336:43:2"},"nodeType":"YulIf","src":"1333:63:2"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1316:5:2","type":""}],"src":"1280:122:2"},{"body":{"nodeType":"YulBlock","src":"1460:87:2","statements":[{"nodeType":"YulAssignment","src":"1470:29:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1492:6:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1479:12:2"},"nodeType":"YulFunctionCall","src":"1479:20:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1470:5:2"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1535:5:2"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1508:26:2"},"nodeType":"YulFunctionCall","src":"1508:33:2"},"nodeType":"YulExpressionStatement","src":"1508:33:2"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1438:6:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"1446:3:2","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1454:5:2","type":""}],"src":"1408:139:2"},{"body":{"nodeType":"YulBlock","src":"1653:519:2","statements":[{"body":{"nodeType":"YulBlock","src":"1699:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1701:77:2"},"nodeType":"YulFunctionCall","src":"1701:79:2"},"nodeType":"YulExpressionStatement","src":"1701:79:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1674:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"1683:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1670:3:2"},"nodeType":"YulFunctionCall","src":"1670:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"1695:2:2","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1666:3:2"},"nodeType":"YulFunctionCall","src":"1666:32:2"},"nodeType":"YulIf","src":"1663:119:2"},{"nodeType":"YulBlock","src":"1792:117:2","statements":[{"nodeType":"YulVariableDeclaration","src":"1807:15:2","value":{"kind":"number","nodeType":"YulLiteral","src":"1821:1:2","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1811:6:2","type":""}]},{"nodeType":"YulAssignment","src":"1836:63:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1871:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"1882:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1867:3:2"},"nodeType":"YulFunctionCall","src":"1867:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1891:7:2"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1846:20:2"},"nodeType":"YulFunctionCall","src":"1846:53:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1836:6:2"}]}]},{"nodeType":"YulBlock","src":"1919:118:2","statements":[{"nodeType":"YulVariableDeclaration","src":"1934:16:2","value":{"kind":"number","nodeType":"YulLiteral","src":"1948:2:2","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1938:6:2","type":""}]},{"nodeType":"YulAssignment","src":"1964:63:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1999:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"2010:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1995:3:2"},"nodeType":"YulFunctionCall","src":"1995:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2019:7:2"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1974:20:2"},"nodeType":"YulFunctionCall","src":"1974:53:2"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1964:6:2"}]}]},{"nodeType":"YulBlock","src":"2047:118:2","statements":[{"nodeType":"YulVariableDeclaration","src":"2062:16:2","value":{"kind":"number","nodeType":"YulLiteral","src":"2076:2:2","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2066:6:2","type":""}]},{"nodeType":"YulAssignment","src":"2092:63:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2127:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"2138:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:2"},"nodeType":"YulFunctionCall","src":"2123:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2147:7:2"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"2102:20:2"},"nodeType":"YulFunctionCall","src":"2102:53:2"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2092:6:2"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1607:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1618:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1630:6:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1638:6:2","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1646:6:2","type":""}],"src":"1553:619:2"},{"body":{"nodeType":"YulBlock","src":"2220:48:2","statements":[{"nodeType":"YulAssignment","src":"2230:32:2","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2255:5:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2248:6:2"},"nodeType":"YulFunctionCall","src":"2248:13:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2241:6:2"},"nodeType":"YulFunctionCall","src":"2241:21:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2230:7:2"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2202:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2212:7:2","type":""}],"src":"2178:90:2"},{"body":{"nodeType":"YulBlock","src":"2333:50:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2350:3:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2370:5:2"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2355:14:2"},"nodeType":"YulFunctionCall","src":"2355:21:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2343:6:2"},"nodeType":"YulFunctionCall","src":"2343:34:2"},"nodeType":"YulExpressionStatement","src":"2343:34:2"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2321:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2328:3:2","type":""}],"src":"2274:109:2"},{"body":{"nodeType":"YulBlock","src":"2481:118:2","statements":[{"nodeType":"YulAssignment","src":"2491:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2503:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2514:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2499:3:2"},"nodeType":"YulFunctionCall","src":"2499:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2491:4:2"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2565:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2578:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2589:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2574:3:2"},"nodeType":"YulFunctionCall","src":"2574:17:2"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"2527:37:2"},"nodeType":"YulFunctionCall","src":"2527:65:2"},"nodeType":"YulExpressionStatement","src":"2527:65:2"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2453:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2465:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2476:4:2","type":""}],"src":"2389:210:2"},{"body":{"nodeType":"YulBlock","src":"2694:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2711:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2714:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2704:6:2"},"nodeType":"YulFunctionCall","src":"2704:12:2"},"nodeType":"YulExpressionStatement","src":"2704:12:2"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2605:117:2"},{"body":{"nodeType":"YulBlock","src":"2776:54:2","statements":[{"nodeType":"YulAssignment","src":"2786:38:2","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2804:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"2811:2:2","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2800:3:2"},"nodeType":"YulFunctionCall","src":"2800:14:2"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2820:2:2","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2816:3:2"},"nodeType":"YulFunctionCall","src":"2816:7:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2796:3:2"},"nodeType":"YulFunctionCall","src":"2796:28:2"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2786:6:2"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2759:5:2","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2769:6:2","type":""}],"src":"2728:102:2"},{"body":{"nodeType":"YulBlock","src":"2864:152:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2881:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2884:77:2","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2874:6:2"},"nodeType":"YulFunctionCall","src":"2874:88:2"},"nodeType":"YulExpressionStatement","src":"2874:88:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2978:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2981:4:2","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2971:6:2"},"nodeType":"YulFunctionCall","src":"2971:15:2"},"nodeType":"YulExpressionStatement","src":"2971:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3002:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3005:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2995:6:2"},"nodeType":"YulFunctionCall","src":"2995:15:2"},"nodeType":"YulExpressionStatement","src":"2995:15:2"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2836:180:2"},{"body":{"nodeType":"YulBlock","src":"3065:238:2","statements":[{"nodeType":"YulVariableDeclaration","src":"3075:58:2","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3097:6:2"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3127:4:2"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3105:21:2"},"nodeType":"YulFunctionCall","src":"3105:27:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3093:3:2"},"nodeType":"YulFunctionCall","src":"3093:40:2"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3079:10:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"3244:22:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3246:16:2"},"nodeType":"YulFunctionCall","src":"3246:18:2"},"nodeType":"YulExpressionStatement","src":"3246:18:2"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3187:10:2"},{"kind":"number","nodeType":"YulLiteral","src":"3199:18:2","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3184:2:2"},"nodeType":"YulFunctionCall","src":"3184:34:2"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3223:10:2"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3235:6:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3220:2:2"},"nodeType":"YulFunctionCall","src":"3220:22:2"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3181:2:2"},"nodeType":"YulFunctionCall","src":"3181:62:2"},"nodeType":"YulIf","src":"3178:88:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3282:2:2","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3286:10:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3275:6:2"},"nodeType":"YulFunctionCall","src":"3275:22:2"},"nodeType":"YulExpressionStatement","src":"3275:22:2"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3051:6:2","type":""},{"name":"size","nodeType":"YulTypedName","src":"3059:4:2","type":""}],"src":"3022:281:2"},{"body":{"nodeType":"YulBlock","src":"3350:88:2","statements":[{"nodeType":"YulAssignment","src":"3360:30:2","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"3370:18:2"},"nodeType":"YulFunctionCall","src":"3370:20:2"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3360:6:2"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3419:6:2"},{"name":"size","nodeType":"YulIdentifier","src":"3427:4:2"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3399:19:2"},"nodeType":"YulFunctionCall","src":"3399:33:2"},"nodeType":"YulExpressionStatement","src":"3399:33:2"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3334:4:2","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3343:6:2","type":""}],"src":"3309:129:2"},{"body":{"nodeType":"YulBlock","src":"3526:229:2","statements":[{"body":{"nodeType":"YulBlock","src":"3631:22:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3633:16:2"},"nodeType":"YulFunctionCall","src":"3633:18:2"},"nodeType":"YulExpressionStatement","src":"3633:18:2"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3603:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"3611:18:2","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3600:2:2"},"nodeType":"YulFunctionCall","src":"3600:30:2"},"nodeType":"YulIf","src":"3597:56:2"},{"nodeType":"YulAssignment","src":"3663:25:2","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3675:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"3683:4:2","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3671:3:2"},"nodeType":"YulFunctionCall","src":"3671:17:2"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3663:4:2"}]},{"nodeType":"YulAssignment","src":"3725:23:2","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3737:4:2"},{"kind":"number","nodeType":"YulLiteral","src":"3743:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3733:3:2"},"nodeType":"YulFunctionCall","src":"3733:15:2"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3725:4:2"}]}]},"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3510:6:2","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3521:4:2","type":""}],"src":"3444:311:2"},{"body":{"nodeType":"YulBlock","src":"3850:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3867:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3870:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3860:6:2"},"nodeType":"YulFunctionCall","src":"3860:12:2"},"nodeType":"YulExpressionStatement","src":"3860:12:2"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"3761:117:2"},{"body":{"nodeType":"YulBlock","src":"4003:608:2","statements":[{"nodeType":"YulAssignment","src":"4013:90:2","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4095:6:2"}],"functionName":{"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4038:56:2"},"nodeType":"YulFunctionCall","src":"4038:64:2"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4022:15:2"},"nodeType":"YulFunctionCall","src":"4022:81:2"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4013:5:2"}]},{"nodeType":"YulVariableDeclaration","src":"4112:16:2","value":{"name":"array","nodeType":"YulIdentifier","src":"4123:5:2"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4116:3:2","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4145:5:2"},{"name":"length","nodeType":"YulIdentifier","src":"4152:6:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4138:6:2"},"nodeType":"YulFunctionCall","src":"4138:21:2"},"nodeType":"YulExpressionStatement","src":"4138:21:2"},{"nodeType":"YulAssignment","src":"4168:23:2","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4179:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"4186:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4175:3:2"},"nodeType":"YulFunctionCall","src":"4175:16:2"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4168:3:2"}]},{"nodeType":"YulVariableDeclaration","src":"4201:44:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4219:6:2"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4231:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"4239:4:2","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4227:3:2"},"nodeType":"YulFunctionCall","src":"4227:17:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4215:3:2"},"nodeType":"YulFunctionCall","src":"4215:30:2"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"4205:6:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"4273:103:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"4287:77:2"},"nodeType":"YulFunctionCall","src":"4287:79:2"},"nodeType":"YulExpressionStatement","src":"4287:79:2"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"4260:6:2"},{"name":"end","nodeType":"YulIdentifier","src":"4268:3:2"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4257:2:2"},"nodeType":"YulFunctionCall","src":"4257:15:2"},"nodeType":"YulIf","src":"4254:122:2"},{"body":{"nodeType":"YulBlock","src":"4461:144:2","statements":[{"nodeType":"YulVariableDeclaration","src":"4476:21:2","value":{"name":"src","nodeType":"YulIdentifier","src":"4494:3:2"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"4480:10:2","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4518:3:2"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"4544:10:2"},{"name":"end","nodeType":"YulIdentifier","src":"4556:3:2"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4523:20:2"},"nodeType":"YulFunctionCall","src":"4523:37:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4511:6:2"},"nodeType":"YulFunctionCall","src":"4511:50:2"},"nodeType":"YulExpressionStatement","src":"4511:50:2"},{"nodeType":"YulAssignment","src":"4574:21:2","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4585:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"4590:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4581:3:2"},"nodeType":"YulFunctionCall","src":"4581:14:2"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4574:3:2"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4414:3:2"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"4419:6:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4411:2:2"},"nodeType":"YulFunctionCall","src":"4411:15:2"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4427:25:2","statements":[{"nodeType":"YulAssignment","src":"4429:21:2","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4440:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"4445:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4436:3:2"},"nodeType":"YulFunctionCall","src":"4436:14:2"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"4429:3:2"}]}]},"pre":{"nodeType":"YulBlock","src":"4389:21:2","statements":[{"nodeType":"YulVariableDeclaration","src":"4391:17:2","value":{"name":"offset","nodeType":"YulIdentifier","src":"4402:6:2"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"4395:3:2","type":""}]}]},"src":"4385:220:2"}]},"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3973:6:2","type":""},{"name":"length","nodeType":"YulTypedName","src":"3981:6:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"3989:3:2","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3997:5:2","type":""}],"src":"3901:710:2"},{"body":{"nodeType":"YulBlock","src":"4711:293:2","statements":[{"body":{"nodeType":"YulBlock","src":"4760:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4762:77:2"},"nodeType":"YulFunctionCall","src":"4762:79:2"},"nodeType":"YulExpressionStatement","src":"4762:79:2"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4739:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"4747:4:2","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4735:3:2"},"nodeType":"YulFunctionCall","src":"4735:17:2"},{"name":"end","nodeType":"YulIdentifier","src":"4754:3:2"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4731:3:2"},"nodeType":"YulFunctionCall","src":"4731:27:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4724:6:2"},"nodeType":"YulFunctionCall","src":"4724:35:2"},"nodeType":"YulIf","src":"4721:122:2"},{"nodeType":"YulVariableDeclaration","src":"4852:34:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4879:6:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4866:12:2"},"nodeType":"YulFunctionCall","src":"4866:20:2"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4856:6:2","type":""}]},{"nodeType":"YulAssignment","src":"4895:103:2","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4971:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"4979:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4967:3:2"},"nodeType":"YulFunctionCall","src":"4967:17:2"},{"name":"length","nodeType":"YulIdentifier","src":"4986:6:2"},{"name":"end","nodeType":"YulIdentifier","src":"4994:3:2"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4904:62:2"},"nodeType":"YulFunctionCall","src":"4904:94:2"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4895:5:2"}]}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4689:6:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"4697:3:2","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4705:5:2","type":""}],"src":"4634:370:2"},{"body":{"nodeType":"YulBlock","src":"5152:833:2","statements":[{"body":{"nodeType":"YulBlock","src":"5199:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5201:77:2"},"nodeType":"YulFunctionCall","src":"5201:79:2"},"nodeType":"YulExpressionStatement","src":"5201:79:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5173:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"5182:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5169:3:2"},"nodeType":"YulFunctionCall","src":"5169:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"5194:3:2","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5165:3:2"},"nodeType":"YulFunctionCall","src":"5165:33:2"},"nodeType":"YulIf","src":"5162:120:2"},{"nodeType":"YulBlock","src":"5292:117:2","statements":[{"nodeType":"YulVariableDeclaration","src":"5307:15:2","value":{"kind":"number","nodeType":"YulLiteral","src":"5321:1:2","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5311:6:2","type":""}]},{"nodeType":"YulAssignment","src":"5336:63:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5371:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"5382:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5367:3:2"},"nodeType":"YulFunctionCall","src":"5367:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5391:7:2"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"5346:20:2"},"nodeType":"YulFunctionCall","src":"5346:53:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5336:6:2"}]}]},{"nodeType":"YulBlock","src":"5419:303:2","statements":[{"nodeType":"YulVariableDeclaration","src":"5434:46:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5465:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"5476:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5461:3:2"},"nodeType":"YulFunctionCall","src":"5461:18:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5448:12:2"},"nodeType":"YulFunctionCall","src":"5448:32:2"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5438:6:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"5527:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5529:77:2"},"nodeType":"YulFunctionCall","src":"5529:79:2"},"nodeType":"YulExpressionStatement","src":"5529:79:2"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5499:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"5507:18:2","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5496:2:2"},"nodeType":"YulFunctionCall","src":"5496:30:2"},"nodeType":"YulIf","src":"5493:117:2"},{"nodeType":"YulAssignment","src":"5624:88:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5684:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"5695:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5680:3:2"},"nodeType":"YulFunctionCall","src":"5680:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5704:7:2"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5634:45:2"},"nodeType":"YulFunctionCall","src":"5634:78:2"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5624:6:2"}]}]},{"nodeType":"YulBlock","src":"5732:118:2","statements":[{"nodeType":"YulVariableDeclaration","src":"5747:16:2","value":{"kind":"number","nodeType":"YulLiteral","src":"5761:2:2","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5751:6:2","type":""}]},{"nodeType":"YulAssignment","src":"5777:63:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5812:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"5823:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5808:3:2"},"nodeType":"YulFunctionCall","src":"5808:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5832:7:2"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5787:20:2"},"nodeType":"YulFunctionCall","src":"5787:53:2"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5777:6:2"}]}]},{"nodeType":"YulBlock","src":"5860:118:2","statements":[{"nodeType":"YulVariableDeclaration","src":"5875:16:2","value":{"kind":"number","nodeType":"YulLiteral","src":"5889:2:2","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5879:6:2","type":""}]},{"nodeType":"YulAssignment","src":"5905:63:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5940:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"5951:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5936:3:2"},"nodeType":"YulFunctionCall","src":"5936:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5960:7:2"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5915:20:2"},"nodeType":"YulFunctionCall","src":"5915:53:2"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5905:6:2"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_array$_t_bytes32_$dyn_memory_ptrt_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5098:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5109:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5121:6:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5129:6:2","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5137:6:2","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5145:6:2","type":""}],"src":"5010:975:2"},{"body":{"nodeType":"YulBlock","src":"6033:52:2","statements":[{"nodeType":"YulAssignment","src":"6043:35:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6068:2:2","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"6072:5:2"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6064:3:2"},"nodeType":"YulFunctionCall","src":"6064:14:2"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6043:8:2"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6014:5:2","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6024:8:2","type":""}],"src":"5991:94:2"},{"body":{"nodeType":"YulBlock","src":"6138:47:2","statements":[{"nodeType":"YulAssignment","src":"6148:31:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6173:5:2"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"6159:13:2"},"nodeType":"YulFunctionCall","src":"6159:20:2"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"6148:7:2"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6120:5:2","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"6130:7:2","type":""}],"src":"6091:94:2"},{"body":{"nodeType":"YulBlock","src":"6238:53:2","statements":[{"nodeType":"YulAssignment","src":"6248:37:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6279:5:2"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"6259:19:2"},"nodeType":"YulFunctionCall","src":"6259:26:2"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"6248:7:2"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6220:5:2","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"6230:7:2","type":""}],"src":"6191:100:2"},{"body":{"nodeType":"YulBlock","src":"6380:74:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6397:3:2"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6440:5:2"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6422:17:2"},"nodeType":"YulFunctionCall","src":"6422:24:2"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"6402:19:2"},"nodeType":"YulFunctionCall","src":"6402:45:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6390:6:2"},"nodeType":"YulFunctionCall","src":"6390:58:2"},"nodeType":"YulExpressionStatement","src":"6390:58:2"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6368:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6375:3:2","type":""}],"src":"6297:157:2"},{"body":{"nodeType":"YulBlock","src":"6507:32:2","statements":[{"nodeType":"YulAssignment","src":"6517:16:2","value":{"name":"value","nodeType":"YulIdentifier","src":"6528:5:2"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"6517:7:2"}]}]},"name":"leftAlign_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6489:5:2","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"6499:7:2","type":""}],"src":"6460:79:2"},{"body":{"nodeType":"YulBlock","src":"6628:74:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6645:3:2"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6688:5:2"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6670:17:2"},"nodeType":"YulFunctionCall","src":"6670:24:2"}],"functionName":{"name":"leftAlign_t_uint256","nodeType":"YulIdentifier","src":"6650:19:2"},"nodeType":"YulFunctionCall","src":"6650:45:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6638:6:2"},"nodeType":"YulFunctionCall","src":"6638:58:2"},"nodeType":"YulExpressionStatement","src":"6638:58:2"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6616:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6623:3:2","type":""}],"src":"6545:157:2"},{"body":{"nodeType":"YulBlock","src":"6852:253:2","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6925:6:2"},{"name":"pos","nodeType":"YulIdentifier","src":"6934:3:2"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6863:61:2"},"nodeType":"YulFunctionCall","src":"6863:75:2"},"nodeType":"YulExpressionStatement","src":"6863:75:2"},{"nodeType":"YulAssignment","src":"6947:19:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6958:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"6963:2:2","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6954:3:2"},"nodeType":"YulFunctionCall","src":"6954:12:2"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6947:3:2"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7038:6:2"},{"name":"pos","nodeType":"YulIdentifier","src":"7047:3:2"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6976:61:2"},"nodeType":"YulFunctionCall","src":"6976:75:2"},"nodeType":"YulExpressionStatement","src":"6976:75:2"},{"nodeType":"YulAssignment","src":"7060:19:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7071:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"7076:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7067:3:2"},"nodeType":"YulFunctionCall","src":"7067:12:2"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7060:3:2"}]},{"nodeType":"YulAssignment","src":"7089:10:2","value":{"name":"pos","nodeType":"YulIdentifier","src":"7096:3:2"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7089:3:2"}]}]},"name":"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6823:3:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6829:6:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6837:6:2","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6848:3:2","type":""}],"src":"6708:397:2"},{"body":{"nodeType":"YulBlock","src":"7207:73:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7224:3:2"},{"name":"length","nodeType":"YulIdentifier","src":"7229:6:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7217:6:2"},"nodeType":"YulFunctionCall","src":"7217:19:2"},"nodeType":"YulExpressionStatement","src":"7217:19:2"},{"nodeType":"YulAssignment","src":"7245:29:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7264:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"7269:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7260:3:2"},"nodeType":"YulFunctionCall","src":"7260:14:2"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7245:11:2"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7179:3:2","type":""},{"name":"length","nodeType":"YulTypedName","src":"7184:6:2","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7195:11:2","type":""}],"src":"7111:169:2"},{"body":{"nodeType":"YulBlock","src":"7392:57:2","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7414:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"7422:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7410:3:2"},"nodeType":"YulFunctionCall","src":"7410:14:2"},{"hexValue":"496e76616c69642070726f6f66","kind":"string","nodeType":"YulLiteral","src":"7426:15:2","type":"","value":"Invalid proof"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7403:6:2"},"nodeType":"YulFunctionCall","src":"7403:39:2"},"nodeType":"YulExpressionStatement","src":"7403:39:2"}]},"name":"store_literal_in_memory_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7384:6:2","type":""}],"src":"7286:163:2"},{"body":{"nodeType":"YulBlock","src":"7601:220:2","statements":[{"nodeType":"YulAssignment","src":"7611:74:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7677:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"7682:2:2","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7618:58:2"},"nodeType":"YulFunctionCall","src":"7618:67:2"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7611:3:2"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7783:3:2"}],"functionName":{"name":"store_literal_in_memory_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639","nodeType":"YulIdentifier","src":"7694:88:2"},"nodeType":"YulFunctionCall","src":"7694:93:2"},"nodeType":"YulExpressionStatement","src":"7694:93:2"},{"nodeType":"YulAssignment","src":"7796:19:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7807:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"7812:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7803:3:2"},"nodeType":"YulFunctionCall","src":"7803:12:2"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7796:3:2"}]}]},"name":"abi_encode_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7589:3:2","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7597:3:2","type":""}],"src":"7455:366:2"},{"body":{"nodeType":"YulBlock","src":"7998:248:2","statements":[{"nodeType":"YulAssignment","src":"8008:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8020:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"8031:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8016:3:2"},"nodeType":"YulFunctionCall","src":"8016:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8008:4:2"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8055:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"8066:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8051:3:2"},"nodeType":"YulFunctionCall","src":"8051:17:2"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8074:4:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"8080:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8070:3:2"},"nodeType":"YulFunctionCall","src":"8070:20:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8044:6:2"},"nodeType":"YulFunctionCall","src":"8044:47:2"},"nodeType":"YulExpressionStatement","src":"8044:47:2"},{"nodeType":"YulAssignment","src":"8100:139:2","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8234:4:2"}],"functionName":{"name":"abi_encode_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8108:124:2"},"nodeType":"YulFunctionCall","src":"8108:131:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8100:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7978:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7993:4:2","type":""}],"src":"7827:419:2"},{"body":{"nodeType":"YulBlock","src":"8280:152:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8297:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8300:77:2","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8290:6:2"},"nodeType":"YulFunctionCall","src":"8290:88:2"},"nodeType":"YulExpressionStatement","src":"8290:88:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8394:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8397:4:2","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8387:6:2"},"nodeType":"YulFunctionCall","src":"8387:15:2"},"nodeType":"YulExpressionStatement","src":"8387:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8418:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8421:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8411:6:2"},"nodeType":"YulFunctionCall","src":"8411:15:2"},"nodeType":"YulExpressionStatement","src":"8411:15:2"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"8252:180:2"},{"body":{"nodeType":"YulBlock","src":"8466:152:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8483:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8486:77:2","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8476:6:2"},"nodeType":"YulFunctionCall","src":"8476:88:2"},"nodeType":"YulExpressionStatement","src":"8476:88:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8580:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8583:4:2","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8573:6:2"},"nodeType":"YulFunctionCall","src":"8573:15:2"},"nodeType":"YulExpressionStatement","src":"8573:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8604:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8607:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8597:6:2"},"nodeType":"YulFunctionCall","src":"8597:15:2"},"nodeType":"YulExpressionStatement","src":"8597:15:2"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8438:180:2"},{"body":{"nodeType":"YulBlock","src":"8667:190:2","statements":[{"nodeType":"YulAssignment","src":"8677:33:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8704:5:2"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8686:17:2"},"nodeType":"YulFunctionCall","src":"8686:24:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8677:5:2"}]},{"body":{"nodeType":"YulBlock","src":"8800:22:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8802:16:2"},"nodeType":"YulFunctionCall","src":"8802:18:2"},"nodeType":"YulExpressionStatement","src":"8802:18:2"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8725:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"8732:66:2","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8722:2:2"},"nodeType":"YulFunctionCall","src":"8722:77:2"},"nodeType":"YulIf","src":"8719:103:2"},{"nodeType":"YulAssignment","src":"8831:20:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8842:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"8849:1:2","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8838:3:2"},"nodeType":"YulFunctionCall","src":"8838:13:2"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8831:3:2"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8653:5:2","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8663:3:2","type":""}],"src":"8624:233:2"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes32[]\n    function abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_bytes32(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes32t_array$_t_bytes32_$dyn_memory_ptrt_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid proof\")\n\n    }\n\n    function abi_encode_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n","id":2,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100365760003560e01c8063235019a01461003b578063cff144f71461006b575b600080fd5b610055600480360381019061005091906102f3565b61009b565b6040516100629190610361565b60405180910390f35b610085600480360381019061008091906104d5565b6100e1565b6040516100929190610361565b60405180910390f35b600083836040516020016100b09291906105c1565b6040516020818303038152906040528051906020012082036100d557600190506100da565b600090505b9392505050565b60008083836040516020016100f79291906105c1565b60405160208183030381529060405280519060200120905061011a858783610166565b610159576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101509061064a565b60405180910390fd5b6001915050949350505050565b600082610173858461017d565b1490509392505050565b60008082905060005b84518110156101c8576101b3828683815181106101a6576101a561066a565b5b60200260200101516101d3565b915080806101c0906106c8565b915050610186565b508091505092915050565b60008183106101eb576101e682846101fe565b6101f6565b6101f583836101fe565b5b905092915050565b600082600052816020526040600020905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061025482610229565b9050919050565b61026481610249565b811461026f57600080fd5b50565b6000813590506102818161025b565b92915050565b6000819050919050565b61029a81610287565b81146102a557600080fd5b50565b6000813590506102b781610291565b92915050565b6000819050919050565b6102d0816102bd565b81146102db57600080fd5b50565b6000813590506102ed816102c7565b92915050565b60008060006060848603121561030c5761030b61021f565b5b600061031a86828701610272565b935050602061032b868287016102a8565b925050604061033c868287016102de565b9150509250925092565b60008115159050919050565b61035b81610346565b82525050565b60006020820190506103766000830184610352565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103ca82610381565b810181811067ffffffffffffffff821117156103e9576103e8610392565b5b80604052505050565b60006103fc610215565b905061040882826103c1565b919050565b600067ffffffffffffffff82111561042857610427610392565b5b602082029050602081019050919050565b600080fd5b600061045161044c8461040d565b6103f2565b9050808382526020820190506020840283018581111561047457610473610439565b5b835b8181101561049d578061048988826102de565b845260208401935050602081019050610476565b5050509392505050565b600082601f8301126104bc576104bb61037c565b5b81356104cc84826020860161043e565b91505092915050565b600080600080608085870312156104ef576104ee61021f565b5b60006104fd878288016102de565b945050602085013567ffffffffffffffff81111561051e5761051d610224565b5b61052a878288016104a7565b935050604061053b87828801610272565b925050606061054c878288016102a8565b91505092959194509250565b60008160601b9050919050565b600061057082610558565b9050919050565b600061058282610565565b9050919050565b61059a61059582610249565b610577565b82525050565b6000819050919050565b6105bb6105b682610287565b6105a0565b82525050565b60006105cd8285610589565b6014820191506105dd82846105aa565b6020820191508190509392505050565b600082825260208201905092915050565b7f496e76616c69642070726f6f6600000000000000000000000000000000000000600082015250565b6000610634600d836105ed565b915061063f826105fe565b602082019050919050565b6000602082019050818103600083015261066381610627565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106d382610287565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361070557610704610699565b5b60018201905091905056fea264697066735822122050b96d7327bce5cafdcad09d6bf4040589b8e524cb1df74ce30b967f22603d8f64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x235019A0 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xCFF144F7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x361 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x361 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB0 SWAP3 SWAP2 SWAP1 PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 SUB PUSH2 0xD5 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xDA JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF7 SWAP3 SWAP2 SWAP1 PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x11A DUP6 DUP8 DUP4 PUSH2 0x166 JUMP JUMPDEST PUSH2 0x159 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150 SWAP1 PUSH2 0x64A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x173 DUP6 DUP5 PUSH2 0x17D JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1C8 JUMPI PUSH2 0x1B3 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1A6 JUMPI PUSH2 0x1A5 PUSH2 0x66A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D3 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x1C0 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x186 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1EB JUMPI PUSH2 0x1E6 DUP3 DUP5 PUSH2 0x1FE JUMP JUMPDEST PUSH2 0x1F6 JUMP JUMPDEST PUSH2 0x1F5 DUP4 DUP4 PUSH2 0x1FE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x254 DUP3 PUSH2 0x229 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x264 DUP2 PUSH2 0x249 JUMP JUMPDEST DUP2 EQ PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x281 DUP2 PUSH2 0x25B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29A DUP2 PUSH2 0x287 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B7 DUP2 PUSH2 0x291 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D0 DUP2 PUSH2 0x2BD JUMP JUMPDEST DUP2 EQ PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2ED DUP2 PUSH2 0x2C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x30C JUMPI PUSH2 0x30B PUSH2 0x21F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31A DUP7 DUP3 DUP8 ADD PUSH2 0x272 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x32B DUP7 DUP3 DUP8 ADD PUSH2 0x2A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x33C DUP7 DUP3 DUP8 ADD PUSH2 0x2DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x35B DUP2 PUSH2 0x346 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x376 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x352 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3CA DUP3 PUSH2 0x381 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3E9 JUMPI PUSH2 0x3E8 PUSH2 0x392 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FC PUSH2 0x215 JUMP JUMPDEST SWAP1 POP PUSH2 0x408 DUP3 DUP3 PUSH2 0x3C1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x428 JUMPI PUSH2 0x427 PUSH2 0x392 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x451 PUSH2 0x44C DUP5 PUSH2 0x40D JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x474 JUMPI PUSH2 0x473 PUSH2 0x439 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x49D JUMPI DUP1 PUSH2 0x489 DUP9 DUP3 PUSH2 0x2DE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x476 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4BC JUMPI PUSH2 0x4BB PUSH2 0x37C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4CC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x43E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4EF JUMPI PUSH2 0x4EE PUSH2 0x21F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4FD DUP8 DUP3 DUP9 ADD PUSH2 0x2DE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x51E JUMPI PUSH2 0x51D PUSH2 0x224 JUMP JUMPDEST JUMPDEST PUSH2 0x52A DUP8 DUP3 DUP9 ADD PUSH2 0x4A7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x53B DUP8 DUP3 DUP9 ADD PUSH2 0x272 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x54C DUP8 DUP3 DUP9 ADD PUSH2 0x2A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x570 DUP3 PUSH2 0x558 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x582 DUP3 PUSH2 0x565 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x59A PUSH2 0x595 DUP3 PUSH2 0x249 JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5BB PUSH2 0x5B6 DUP3 PUSH2 0x287 JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CD DUP3 DUP6 PUSH2 0x589 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x5DD DUP3 DUP5 PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642070726F6F6600000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x634 PUSH1 0xD DUP4 PUSH2 0x5ED JUMP JUMPDEST SWAP2 POP PUSH2 0x63F DUP3 PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x663 DUP2 PUSH2 0x627 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6D3 DUP3 PUSH2 0x287 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x705 JUMPI PUSH2 0x704 PUSH2 0x699 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xB9 PUSH14 0x7327BCE5CAFDCAD09D6BF4040589 0xB8 0xE5 0x24 0xCB SAR 0xF7 0x4C 0xE3 SIGNEXTEND SWAP7 PUSH32 0x22603D8F64736F6C634300081200330000000000000000000000000000000000 ","sourceMap":"210:628:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;614:222;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;262:346;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;614:222;700:4;755;761:6;738:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;728:41;;;;;;720:4;:49;716:91;;792:4;785:11;;;;716:91;824:5;817:12;;614:222;;;;;;:::o;262:346::-;405:4;436:12;478:4;484:6;461:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;451:41;;;;;;436:56;;525:37;544:5;551:4;557;525:18;:37::i;:::-;517:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;597:4;590:11;;;262:346;;;;;;:::o;1156:184:0:-;1277:4;1329;1300:25;1313:5;1320:4;1300:12;:25::i;:::-;:33;1293:40;;1156:184;;;;;:::o;1994:290::-;2077:7;2096:20;2119:4;2096:27;;2138:9;2133:116;2157:5;:12;2153:1;:16;2133:116;;;2205:33;2215:12;2229:5;2235:1;2229:8;;;;;;;;:::i;:::-;;;;;;;;2205:9;:33::i;:::-;2190:48;;2171:3;;;;;:::i;:::-;;;;2133:116;;;;2265:12;2258:19;;;1994:290;;;;:::o;8879:147::-;8942:7;8972:1;8968;:5;:51;;8999:20;9014:1;9017;8999:14;:20::i;:::-;8968:51;;;8976:20;8991:1;8994;8976:14;:20::i;:::-;8968:51;8961:58;;8879:147;;;;:::o;9032:261::-;9100:13;9204:1;9198:4;9191:15;9232:1;9226:4;9219:15;9272:4;9266;9256:21;9247:30;;9032:261;;;;:::o;7:75:2:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:77::-;1234:7;1263:5;1252:16;;1197:77;;;:::o;1280:122::-;1353:24;1371:5;1353:24;:::i;:::-;1346:5;1343:35;1333:63;;1392:1;1389;1382:12;1333:63;1280:122;:::o;1408:139::-;1454:5;1492:6;1479:20;1470:29;;1508:33;1535:5;1508:33;:::i;:::-;1408:139;;;;:::o;1553:619::-;1630:6;1638;1646;1695:2;1683:9;1674:7;1670:23;1666:32;1663:119;;;1701:79;;:::i;:::-;1663:119;1821:1;1846:53;1891:7;1882:6;1871:9;1867:22;1846:53;:::i;:::-;1836:63;;1792:117;1948:2;1974:53;2019:7;2010:6;1999:9;1995:22;1974:53;:::i;:::-;1964:63;;1919:118;2076:2;2102:53;2147:7;2138:6;2127:9;2123:22;2102:53;:::i;:::-;2092:63;;2047:118;1553:619;;;;;:::o;2178:90::-;2212:7;2255:5;2248:13;2241:21;2230:32;;2178:90;;;:::o;2274:109::-;2355:21;2370:5;2355:21;:::i;:::-;2350:3;2343:34;2274:109;;:::o;2389:210::-;2476:4;2514:2;2503:9;2499:18;2491:26;;2527:65;2589:1;2578:9;2574:17;2565:6;2527:65;:::i;:::-;2389:210;;;;:::o;2605:117::-;2714:1;2711;2704:12;2728:102;2769:6;2820:2;2816:7;2811:2;2804:5;2800:14;2796:28;2786:38;;2728:102;;;:::o;2836:180::-;2884:77;2881:1;2874:88;2981:4;2978:1;2971:15;3005:4;3002:1;2995:15;3022:281;3105:27;3127:4;3105:27;:::i;:::-;3097:6;3093:40;3235:6;3223:10;3220:22;3199:18;3187:10;3184:34;3181:62;3178:88;;;3246:18;;:::i;:::-;3178:88;3286:10;3282:2;3275:22;3065:238;3022:281;;:::o;3309:129::-;3343:6;3370:20;;:::i;:::-;3360:30;;3399:33;3427:4;3419:6;3399:33;:::i;:::-;3309:129;;;:::o;3444:311::-;3521:4;3611:18;3603:6;3600:30;3597:56;;;3633:18;;:::i;:::-;3597:56;3683:4;3675:6;3671:17;3663:25;;3743:4;3737;3733:15;3725:23;;3444:311;;;:::o;3761:117::-;3870:1;3867;3860:12;3901:710;3997:5;4022:81;4038:64;4095:6;4038:64;:::i;:::-;4022:81;:::i;:::-;4013:90;;4123:5;4152:6;4145:5;4138:21;4186:4;4179:5;4175:16;4168:23;;4239:4;4231:6;4227:17;4219:6;4215:30;4268:3;4260:6;4257:15;4254:122;;;4287:79;;:::i;:::-;4254:122;4402:6;4385:220;4419:6;4414:3;4411:15;4385:220;;;4494:3;4523:37;4556:3;4544:10;4523:37;:::i;:::-;4518:3;4511:50;4590:4;4585:3;4581:14;4574:21;;4461:144;4445:4;4440:3;4436:14;4429:21;;4385:220;;;4389:21;4003:608;;3901:710;;;;;:::o;4634:370::-;4705:5;4754:3;4747:4;4739:6;4735:17;4731:27;4721:122;;4762:79;;:::i;:::-;4721:122;4879:6;4866:20;4904:94;4994:3;4986:6;4979:4;4971:6;4967:17;4904:94;:::i;:::-;4895:103;;4711:293;4634:370;;;;:::o;5010:975::-;5121:6;5129;5137;5145;5194:3;5182:9;5173:7;5169:23;5165:33;5162:120;;;5201:79;;:::i;:::-;5162:120;5321:1;5346:53;5391:7;5382:6;5371:9;5367:22;5346:53;:::i;:::-;5336:63;;5292:117;5476:2;5465:9;5461:18;5448:32;5507:18;5499:6;5496:30;5493:117;;;5529:79;;:::i;:::-;5493:117;5634:78;5704:7;5695:6;5684:9;5680:22;5634:78;:::i;:::-;5624:88;;5419:303;5761:2;5787:53;5832:7;5823:6;5812:9;5808:22;5787:53;:::i;:::-;5777:63;;5732:118;5889:2;5915:53;5960:7;5951:6;5940:9;5936:22;5915:53;:::i;:::-;5905:63;;5860:118;5010:975;;;;;;;:::o;5991:94::-;6024:8;6072:5;6068:2;6064:14;6043:35;;5991:94;;;:::o;6091:::-;6130:7;6159:20;6173:5;6159:20;:::i;:::-;6148:31;;6091:94;;;:::o;6191:100::-;6230:7;6259:26;6279:5;6259:26;:::i;:::-;6248:37;;6191:100;;;:::o;6297:157::-;6402:45;6422:24;6440:5;6422:24;:::i;:::-;6402:45;:::i;:::-;6397:3;6390:58;6297:157;;:::o;6460:79::-;6499:7;6528:5;6517:16;;6460:79;;;:::o;6545:157::-;6650:45;6670:24;6688:5;6670:24;:::i;:::-;6650:45;:::i;:::-;6645:3;6638:58;6545:157;;:::o;6708:397::-;6848:3;6863:75;6934:3;6925:6;6863:75;:::i;:::-;6963:2;6958:3;6954:12;6947:19;;6976:75;7047:3;7038:6;6976:75;:::i;:::-;7076:2;7071:3;7067:12;7060:19;;7096:3;7089:10;;6708:397;;;;;:::o;7111:169::-;7195:11;7229:6;7224:3;7217:19;7269:4;7264:3;7260:14;7245:29;;7111:169;;;;:::o;7286:163::-;7426:15;7422:1;7414:6;7410:14;7403:39;7286:163;:::o;7455:366::-;7597:3;7618:67;7682:2;7677:3;7618:67;:::i;:::-;7611:74;;7694:93;7783:3;7694:93;:::i;:::-;7812:2;7807:3;7803:12;7796:19;;7455:366;;;:::o;7827:419::-;7993:4;8031:2;8020:9;8016:18;8008:26;;8080:9;8074:4;8070:20;8066:1;8055:9;8051:17;8044:47;8108:131;8234:4;8108:131;:::i;:::-;8100:139;;7827:419;;;:::o;8252:180::-;8300:77;8297:1;8290:88;8397:4;8394:1;8387:15;8421:4;8418:1;8411:15;8438:180;8486:77;8483:1;8476:88;8583:4;8580:1;8573:15;8607:4;8604:1;8597:15;8624:233;8663:3;8686:24;8704:5;8686:24;:::i;:::-;8677:33;;8732:66;8725:5;8722:77;8719:103;;8802:18;;:::i;:::-;8719:103;8849:1;8842:5;8838:13;8831:20;;8624:233;;;:::o"},"methodIdentifiers":{"checkHash(address,uint256,bytes32)":"235019a0","verify(bytes32,bytes32[],address,uint256)":"cff144f7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"leaf\",\"type\":\"bytes32\"}],\"name\":\"checkHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MarkleTest.sol\":\"MerkleTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xd466e8b07f4c6220eac16da5127f3ff142e65f0c15c03c7d38f257b02c8585e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6b3cab69f655e40117bbdd8e68d7423f26d1b24248fb189c295f08de8940616\",\"dweb:/ipfs/QmWoyRthsBDMa7gJpH5UCjpa8uNUQfyaGbSgY3uvhBH9F3\"]},\"contracts/MarkleTest.sol\":{\"keccak256\":\"0xadc32ca99cf01875900297c08b746953cf91a0bc8010c40780dff02316c32125\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6d6d4ab0d9147e1299ffcdcb69ed220929c436bf4435bba0d313d3d3f8c02900\",\"dweb:/ipfs/Qmc2nJSdPw48qUmsVpGydScWRgzAvJ4nUBkro6fAGB1AGG\"]}},\"version\":1}"}}}}}