{"id":"a588b717fc86d2c9af23ec33954a86d8","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates merkle trees that are safe\n * against this attack out of the box.\n */\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Calldata version of {verify}\n     *\n     * _Available since v4.7._\n     */\n    function verifyCalldata(\n        bytes32[] calldata proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     *\n     * _Available since v4.4._\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Calldata version of {processProof}\n     *\n     * _Available since v4.7._\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Calldata version of {multiProofVerify}\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proof.length - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value for the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            return hashes[totalHashes - 1];\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Calldata version of {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proof.length - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value for the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            return hashes[totalHashes - 1];\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\n    }\n\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"contracts/MarkleTest.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\n// Uncomment this line to use console.log\n// import \"hardhat/console.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\n\ncontract MerkleTest {\n    // Our rootHash\n    bytes32 public root = 0x4beda981c9d34f2dd099131be6049a1d87676d227e63f4a409ee629043314b4f; \n\n    function checkValidity(bytes32[] calldata _merkleProof) public view returns (bool){\n        bytes32 leaf = keccak256(abi.encodePacked(msg.sender));\n        require(MerkleProof.verify(_merkleProof, root, leaf), \"Incorrect proof\");\n        return true; // Or you can mint tokens here\n    }\n\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"MerkleProof":[501]},"id":502,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"143:658:0","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates merkle trees that are safe\n against this attack out of the box."},"fullyImplemented":true,"id":501,"linearizedBaseContracts":[501],"name":"MerkleProof","nameLocation":"810:11:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":22,"nodeType":"Block","src":"1283:57:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":16,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"1313:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":17,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1320:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":15,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":18,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1300:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":19,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1329:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1300:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":14,"id":21,"nodeType":"Return","src":"1293:40:0"}]},"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"828:323:0","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."},"id":23,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1165:6:0","nodeType":"FunctionDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6,"mutability":"mutable","name":"proof","nameLocation":"1198:5:0","nodeType":"VariableDeclaration","scope":23,"src":"1181:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1181:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5,"nodeType":"ArrayTypeName","src":"1181:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":8,"mutability":"mutable","name":"root","nameLocation":"1221:4:0","nodeType":"VariableDeclaration","scope":23,"src":"1213:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1213:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":10,"mutability":"mutable","name":"leaf","nameLocation":"1243:4:0","nodeType":"VariableDeclaration","scope":23,"src":"1235:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1235:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1171:82:0"},"returnParameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":23,"src":"1277:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12,"name":"bool","nodeType":"ElementaryTypeName","src":"1277:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1276:6:0"},"scope":501,"src":"1156:184:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":43,"nodeType":"Block","src":"1578:65:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":37,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1616:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":38,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"1623:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":36,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1595:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1595:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":40,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1632:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1595:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":35,"id":42,"nodeType":"Return","src":"1588:48:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"1346:90:0","text":" @dev Calldata version of {verify}\n _Available since v4.7._"},"id":44,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"1450:14:0","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"proof","nameLocation":"1493:5:0","nodeType":"VariableDeclaration","scope":44,"src":"1474:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1474:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":26,"nodeType":"ArrayTypeName","src":"1474:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"root","nameLocation":"1516:4:0","nodeType":"VariableDeclaration","scope":44,"src":"1508:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1508:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":31,"mutability":"mutable","name":"leaf","nameLocation":"1538:4:0","nodeType":"VariableDeclaration","scope":44,"src":"1530:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1530:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1464:84:0"},"returnParameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":44,"src":"1572:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":33,"name":"bool","nodeType":"ElementaryTypeName","src":"1572:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1571:6:0"},"scope":501,"src":"1441:202:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":83,"nodeType":"Block","src":"2086:198:0","statements":[{"assignments":[56],"declarations":[{"constant":false,"id":56,"mutability":"mutable","name":"computedHash","nameLocation":"2104:12:0","nodeType":"VariableDeclaration","scope":83,"src":"2096:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":55,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2096:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":58,"initialValue":{"id":57,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"2119:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2096:27:0"},{"body":{"id":79,"nodeType":"Block","src":"2176:73:0","statements":[{"expression":{"id":77,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":70,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2190:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":72,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2215:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":73,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"2229:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":75,"indexExpression":{"id":74,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"2235:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2229:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":71,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2205:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":76,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2205:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2190:48:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":78,"nodeType":"ExpressionStatement","src":"2190:48:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":63,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":64,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"2157:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2163:6:0","memberName":"length","nodeType":"MemberAccess","src":"2157:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2153:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":80,"initializationExpression":{"assignments":[60],"declarations":[{"constant":false,"id":60,"mutability":"mutable","name":"i","nameLocation":"2146:1:0","nodeType":"VariableDeclaration","scope":80,"src":"2138:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":62,"initialValue":{"hexValue":"30","id":61,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2150:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2138:13:0"},"loopExpression":{"expression":{"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2171:3:0","subExpression":{"id":67,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"2171:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":69,"nodeType":"ExpressionStatement","src":"2171:3:0"},"nodeType":"ForStatement","src":"2133:116:0"},{"expression":{"id":81,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2265:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":54,"id":82,"nodeType":"Return","src":"2258:19:0"}]},"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"1649:340:0","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted.\n _Available since v4.4._"},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"2003:12:0","nodeType":"FunctionDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"mutability":"mutable","name":"proof","nameLocation":"2033:5:0","nodeType":"VariableDeclaration","scope":84,"src":"2016:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":46,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2016:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":47,"nodeType":"ArrayTypeName","src":"2016:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":50,"mutability":"mutable","name":"leaf","nameLocation":"2048:4:0","nodeType":"VariableDeclaration","scope":84,"src":"2040:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":49,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2040:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2015:38:0"},"returnParameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":84,"src":"2077:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":52,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2077:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2076:9:0"},"scope":501,"src":"1994:290:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":123,"nodeType":"Block","src":"2493:198:0","statements":[{"assignments":[96],"declarations":[{"constant":false,"id":96,"mutability":"mutable","name":"computedHash","nameLocation":"2511:12:0","nodeType":"VariableDeclaration","scope":123,"src":"2503:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2503:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":98,"initialValue":{"id":97,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"2526:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2503:27:0"},{"body":{"id":119,"nodeType":"Block","src":"2583:73:0","statements":[{"expression":{"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":110,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"2597:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":112,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"2622:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":113,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"2636:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":115,"indexExpression":{"id":114,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"2642:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2636:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":111,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2612:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2612:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2597:48:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":118,"nodeType":"ExpressionStatement","src":"2597:48:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":103,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"2560:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":104,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"2564:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2570:6:0","memberName":"length","nodeType":"MemberAccess","src":"2564:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2560:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"initializationExpression":{"assignments":[100],"declarations":[{"constant":false,"id":100,"mutability":"mutable","name":"i","nameLocation":"2553:1:0","nodeType":"VariableDeclaration","scope":120,"src":"2545:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":99,"name":"uint256","nodeType":"ElementaryTypeName","src":"2545:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":102,"initialValue":{"hexValue":"30","id":101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2557:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2545:13:0"},"loopExpression":{"expression":{"id":108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2578:3:0","subExpression":{"id":107,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"2578:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":109,"nodeType":"ExpressionStatement","src":"2578:3:0"},"nodeType":"ForStatement","src":"2540:116:0"},{"expression":{"id":121,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"2672:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":94,"id":122,"nodeType":"Return","src":"2665:19:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"2290:96:0","text":" @dev Calldata version of {processProof}\n _Available since v4.7._"},"id":124,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"2400:20:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"proof","nameLocation":"2440:5:0","nodeType":"VariableDeclaration","scope":124,"src":"2421:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":86,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2421:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":87,"nodeType":"ArrayTypeName","src":"2421:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":90,"mutability":"mutable","name":"leaf","nameLocation":"2455:4:0","nodeType":"VariableDeclaration","scope":124,"src":"2447:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":89,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2447:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2420:40:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":124,"src":"2484:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":92,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2484:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2483:9:0"},"scope":501,"src":"2391:300:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":149,"nodeType":"Block","src":"3234:76:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":142,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"3269:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":143,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"3276:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":144,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"3288:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":141,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"3251:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3251:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":146,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3299:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3251:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":140,"id":148,"nodeType":"Return","src":"3244:59:0"}]},"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"2697:350:0","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":150,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"3061:16:0","nodeType":"FunctionDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"mutability":"mutable","name":"proof","nameLocation":"3104:5:0","nodeType":"VariableDeclaration","scope":150,"src":"3087:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3087:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":127,"nodeType":"ArrayTypeName","src":"3087:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":131,"mutability":"mutable","name":"proofFlags","nameLocation":"3133:10:0","nodeType":"VariableDeclaration","scope":150,"src":"3119:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":129,"name":"bool","nodeType":"ElementaryTypeName","src":"3119:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":130,"nodeType":"ArrayTypeName","src":"3119:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"root","nameLocation":"3161:4:0","nodeType":"VariableDeclaration","scope":150,"src":"3153:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3153:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"leaves","nameLocation":"3192:6:0","nodeType":"VariableDeclaration","scope":150,"src":"3175:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3175:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":135,"nodeType":"ArrayTypeName","src":"3175:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3077:127:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":150,"src":"3228:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":138,"name":"bool","nodeType":"ElementaryTypeName","src":"3228:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3227:6:0"},"scope":501,"src":"3052:258:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":175,"nodeType":"Block","src":"3715:84:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":168,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"3758:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":169,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"3765:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":170,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"3777:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":167,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"3732:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3732:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":172,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"3788:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3732:60:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":166,"id":174,"nodeType":"Return","src":"3725:67:0"}]},"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"3316:200:0","text":" @dev Calldata version of {multiProofVerify}\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"3530:24:0","nodeType":"FunctionDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"mutability":"mutable","name":"proof","nameLocation":"3583:5:0","nodeType":"VariableDeclaration","scope":176,"src":"3564:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3564:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":153,"nodeType":"ArrayTypeName","src":"3564:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"proofFlags","nameLocation":"3614:10:0","nodeType":"VariableDeclaration","scope":176,"src":"3598:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":155,"name":"bool","nodeType":"ElementaryTypeName","src":"3598:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":156,"nodeType":"ArrayTypeName","src":"3598:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":159,"mutability":"mutable","name":"root","nameLocation":"3642:4:0","nodeType":"VariableDeclaration","scope":176,"src":"3634:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3634:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"leaves","nameLocation":"3673:6:0","nodeType":"VariableDeclaration","scope":176,"src":"3656:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3656:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":161,"nodeType":"ArrayTypeName","src":"3656:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3554:131:0"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":176,"src":"3709:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":164,"name":"bool","nodeType":"ElementaryTypeName","src":"3709:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3708:6:0"},"scope":501,"src":"3521:278:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":320,"nodeType":"Block","src":"4753:1860:0","statements":[{"assignments":[192],"declarations":[{"constant":false,"id":192,"mutability":"mutable","name":"leavesLen","nameLocation":"5144:9:0","nodeType":"VariableDeclaration","scope":320,"src":"5136:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"5136:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":195,"initialValue":{"expression":{"id":193,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"5156:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5163:6:0","memberName":"length","nodeType":"MemberAccess","src":"5156:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5136:33:0"},{"assignments":[197],"declarations":[{"constant":false,"id":197,"mutability":"mutable","name":"totalHashes","nameLocation":"5187:11:0","nodeType":"VariableDeclaration","scope":320,"src":"5179:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"5179:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":200,"initialValue":{"expression":{"id":198,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"5201:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5212:6:0","memberName":"length","nodeType":"MemberAccess","src":"5201:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5179:39:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":202,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5270:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":203,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"5282:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:6:0","memberName":"length","nodeType":"MemberAccess","src":"5282:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5270:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5270:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":208,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"5302:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5270:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5315:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":201,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5262:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:87:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":212,"nodeType":"ExpressionStatement","src":"5262:87:0"},{"assignments":[217],"declarations":[{"constant":false,"id":217,"mutability":"mutable","name":"hashes","nameLocation":"5611:6:0","nodeType":"VariableDeclaration","scope":320,"src":"5594:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5594:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":216,"nodeType":"ArrayTypeName","src":"5594:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":223,"initialValue":{"arguments":[{"id":221,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"5634:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5620:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5624:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":219,"nodeType":"ArrayTypeName","src":"5624:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5620:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5594:52:0"},{"assignments":[225],"declarations":[{"constant":false,"id":225,"mutability":"mutable","name":"leafPos","nameLocation":"5664:7:0","nodeType":"VariableDeclaration","scope":320,"src":"5656:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"5656:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":227,"initialValue":{"hexValue":"30","id":226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5674:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5656:19:0"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"hashPos","nameLocation":"5693:7:0","nodeType":"VariableDeclaration","scope":320,"src":"5685:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":228,"name":"uint256","nodeType":"ElementaryTypeName","src":"5685:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":231,"initialValue":{"hexValue":"30","id":230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5703:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5685:19:0"},{"assignments":[233],"declarations":[{"constant":false,"id":233,"mutability":"mutable","name":"proofPos","nameLocation":"5722:8:0","nodeType":"VariableDeclaration","scope":320,"src":"5714:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"5714:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":235,"initialValue":{"hexValue":"30","id":234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5733:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5714:20:0"},{"body":{"id":293,"nodeType":"Block","src":"6151:258:0","statements":[{"assignments":[247],"declarations":[{"constant":false,"id":247,"mutability":"mutable","name":"a","nameLocation":"6173:1:0","nodeType":"VariableDeclaration","scope":293,"src":"6165:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6165:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":260,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":248,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"6177:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":249,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"6187:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6177:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":255,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"6219:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":258,"indexExpression":{"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6226:9:0","subExpression":{"id":256,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"6226:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6219:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6177:59:0","trueExpression":{"baseExpression":{"id":251,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"6199:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":254,"indexExpression":{"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6206:9:0","subExpression":{"id":252,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"6206:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6199:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6165:71:0"},{"assignments":[262],"declarations":[{"constant":false,"id":262,"mutability":"mutable","name":"b","nameLocation":"6258:1:0","nodeType":"VariableDeclaration","scope":293,"src":"6250:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":261,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6250:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":283,"initialValue":{"condition":{"baseExpression":{"id":263,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"6262:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":265,"indexExpression":{"id":264,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6273:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6262:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":278,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"6340:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":281,"indexExpression":{"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6346:10:0","subExpression":{"id":279,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"6346:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6340:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6262:95:0","trueExpression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":266,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"6278:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":267,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"6288:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6278:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":273,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"6320:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":276,"indexExpression":{"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6327:9:0","subExpression":{"id":274,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"6327:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6320:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6278:59:0","trueExpression":{"baseExpression":{"id":269,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"6300:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":272,"indexExpression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6307:9:0","subExpression":{"id":270,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"6307:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6300:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6250:107:0"},{"expression":{"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":284,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"6371:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":286,"indexExpression":{"id":285,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6378:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6371:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":288,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"6393:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":289,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6396:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":287,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"6383:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6383:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6371:27:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":292,"nodeType":"ExpressionStatement","src":"6371:27:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":240,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6129:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":241,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"6133:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6129:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"initializationExpression":{"assignments":[237],"declarations":[{"constant":false,"id":237,"mutability":"mutable","name":"i","nameLocation":"6122:1:0","nodeType":"VariableDeclaration","scope":294,"src":"6114:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":236,"name":"uint256","nodeType":"ElementaryTypeName","src":"6114:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":239,"initialValue":{"hexValue":"30","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6126:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6114:13:0"},"loopExpression":{"expression":{"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6146:3:0","subExpression":{"id":243,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6146:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":245,"nodeType":"ExpressionStatement","src":"6146:3:0"},"nodeType":"ForStatement","src":"6109:300:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":295,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"6423:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6437:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6423:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":305,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"6505:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6517:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6505:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":317,"nodeType":"Block","src":"6567:40:0","statements":[{"expression":{"baseExpression":{"id":313,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"6588:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":315,"indexExpression":{"hexValue":"30","id":314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6594:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6588:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":190,"id":316,"nodeType":"Return","src":"6581:15:0"}]},"id":318,"nodeType":"IfStatement","src":"6501:106:0","trueBody":{"id":312,"nodeType":"Block","src":"6520:41:0","statements":[{"expression":{"baseExpression":{"id":308,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"6541:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":310,"indexExpression":{"hexValue":"30","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6548:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6541:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":190,"id":311,"nodeType":"Return","src":"6534:16:0"}]}},"id":319,"nodeType":"IfStatement","src":"6419:188:0","trueBody":{"id":304,"nodeType":"Block","src":"6440:55:0","statements":[{"expression":{"baseExpression":{"id":298,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"6461:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":302,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":299,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"6468:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6482:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6468:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6461:23:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":190,"id":303,"nodeType":"Return","src":"6454:30:0"}]}}]},"documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"3805:768:0","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n _Available since v4.7._"},"id":321,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"4587:17:0","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"proof","nameLocation":"4631:5:0","nodeType":"VariableDeclaration","scope":321,"src":"4614:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4614:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":179,"nodeType":"ArrayTypeName","src":"4614:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":183,"mutability":"mutable","name":"proofFlags","nameLocation":"4660:10:0","nodeType":"VariableDeclaration","scope":321,"src":"4646:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":181,"name":"bool","nodeType":"ElementaryTypeName","src":"4646:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"ArrayTypeName","src":"4646:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"leaves","nameLocation":"4697:6:0","nodeType":"VariableDeclaration","scope":321,"src":"4680:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4680:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":185,"nodeType":"ArrayTypeName","src":"4680:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4604:105:0"},"returnParameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"merkleRoot","nameLocation":"4741:10:0","nodeType":"VariableDeclaration","scope":321,"src":"4733:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4733:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4732:20:0"},"scope":501,"src":"4578:2035:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":465,"nodeType":"Block","src":"7013:1860:0","statements":[{"assignments":[337],"declarations":[{"constant":false,"id":337,"mutability":"mutable","name":"leavesLen","nameLocation":"7404:9:0","nodeType":"VariableDeclaration","scope":465,"src":"7396:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"7396:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":340,"initialValue":{"expression":{"id":338,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"7416:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7423:6:0","memberName":"length","nodeType":"MemberAccess","src":"7416:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7396:33:0"},{"assignments":[342],"declarations":[{"constant":false,"id":342,"mutability":"mutable","name":"totalHashes","nameLocation":"7447:11:0","nodeType":"VariableDeclaration","scope":465,"src":"7439:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"7439:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":345,"initialValue":{"expression":{"id":343,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"7461:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7472:6:0","memberName":"length","nodeType":"MemberAccess","src":"7461:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7439:39:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":347,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"7530:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":348,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"7542:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7548:6:0","memberName":"length","nodeType":"MemberAccess","src":"7542:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7530:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7557:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7530:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":353,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"7562:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7530:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7575:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":346,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7522:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7522:87:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":357,"nodeType":"ExpressionStatement","src":"7522:87:0"},{"assignments":[362],"declarations":[{"constant":false,"id":362,"mutability":"mutable","name":"hashes","nameLocation":"7871:6:0","nodeType":"VariableDeclaration","scope":465,"src":"7854:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7854:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":361,"nodeType":"ArrayTypeName","src":"7854:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":368,"initialValue":{"arguments":[{"id":366,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"7894:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7880:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7884:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":364,"nodeType":"ArrayTypeName","src":"7884:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7880:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7854:52:0"},{"assignments":[370],"declarations":[{"constant":false,"id":370,"mutability":"mutable","name":"leafPos","nameLocation":"7924:7:0","nodeType":"VariableDeclaration","scope":465,"src":"7916:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":369,"name":"uint256","nodeType":"ElementaryTypeName","src":"7916:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":372,"initialValue":{"hexValue":"30","id":371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7934:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7916:19:0"},{"assignments":[374],"declarations":[{"constant":false,"id":374,"mutability":"mutable","name":"hashPos","nameLocation":"7953:7:0","nodeType":"VariableDeclaration","scope":465,"src":"7945:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":373,"name":"uint256","nodeType":"ElementaryTypeName","src":"7945:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":376,"initialValue":{"hexValue":"30","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7945:19:0"},{"assignments":[378],"declarations":[{"constant":false,"id":378,"mutability":"mutable","name":"proofPos","nameLocation":"7982:8:0","nodeType":"VariableDeclaration","scope":465,"src":"7974:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"7974:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":380,"initialValue":{"hexValue":"30","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7993:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7974:20:0"},{"body":{"id":438,"nodeType":"Block","src":"8411:258:0","statements":[{"assignments":[392],"declarations":[{"constant":false,"id":392,"mutability":"mutable","name":"a","nameLocation":"8433:1:0","nodeType":"VariableDeclaration","scope":438,"src":"8425:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8425:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":405,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":393,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"8437:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":394,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"8447:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8437:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":400,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"8479:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":403,"indexExpression":{"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8486:9:0","subExpression":{"id":401,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"8486:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8479:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:59:0","trueExpression":{"baseExpression":{"id":396,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"8459:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":399,"indexExpression":{"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8466:9:0","subExpression":{"id":397,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"8466:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8459:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8425:71:0"},{"assignments":[407],"declarations":[{"constant":false,"id":407,"mutability":"mutable","name":"b","nameLocation":"8518:1:0","nodeType":"VariableDeclaration","scope":438,"src":"8510:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":406,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8510:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":428,"initialValue":{"condition":{"baseExpression":{"id":408,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"8522:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":410,"indexExpression":{"id":409,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"8533:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8522:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":423,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"8600:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":426,"indexExpression":{"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8606:10:0","subExpression":{"id":424,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"8606:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8600:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8522:95:0","trueExpression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":411,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"8538:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":412,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"8548:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8538:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":418,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"8580:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":421,"indexExpression":{"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8587:9:0","subExpression":{"id":419,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"8587:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8580:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8538:59:0","trueExpression":{"baseExpression":{"id":414,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"8560:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":417,"indexExpression":{"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8567:9:0","subExpression":{"id":415,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"8567:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8560:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8510:107:0"},{"expression":{"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":429,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"8631:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":431,"indexExpression":{"id":430,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"8638:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8631:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":433,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"8653:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":434,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"8656:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":432,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"8643:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8643:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8631:27:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":437,"nodeType":"ExpressionStatement","src":"8631:27:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":385,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"8389:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":386,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"8393:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8389:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":439,"initializationExpression":{"assignments":[382],"declarations":[{"constant":false,"id":382,"mutability":"mutable","name":"i","nameLocation":"8382:1:0","nodeType":"VariableDeclaration","scope":439,"src":"8374:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":381,"name":"uint256","nodeType":"ElementaryTypeName","src":"8374:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":384,"initialValue":{"hexValue":"30","id":383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8386:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8374:13:0"},"loopExpression":{"expression":{"id":389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8406:3:0","subExpression":{"id":388,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"8406:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":390,"nodeType":"ExpressionStatement","src":"8406:3:0"},"nodeType":"ForStatement","src":"8369:300:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":440,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"8683:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8683:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":450,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"8765:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8777:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8765:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":462,"nodeType":"Block","src":"8827:40:0","statements":[{"expression":{"baseExpression":{"id":458,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"8848:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":460,"indexExpression":{"hexValue":"30","id":459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8848:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":335,"id":461,"nodeType":"Return","src":"8841:15:0"}]},"id":463,"nodeType":"IfStatement","src":"8761:106:0","trueBody":{"id":457,"nodeType":"Block","src":"8780:41:0","statements":[{"expression":{"baseExpression":{"id":453,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"8801:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":455,"indexExpression":{"hexValue":"30","id":454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8808:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8801:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":335,"id":456,"nodeType":"Return","src":"8794:16:0"}]}},"id":464,"nodeType":"IfStatement","src":"8679:188:0","trueBody":{"id":449,"nodeType":"Block","src":"8700:55:0","statements":[{"expression":{"baseExpression":{"id":443,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"8721:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":447,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":444,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"8728:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8742:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8728:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8721:23:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":335,"id":448,"nodeType":"Return","src":"8714:30:0"}]}}]},"documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"6619:202:0","text":" @dev Calldata version of {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":466,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"6835:25:0","nodeType":"FunctionDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"proof","nameLocation":"6889:5:0","nodeType":"VariableDeclaration","scope":466,"src":"6870:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6870:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":324,"nodeType":"ArrayTypeName","src":"6870:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":328,"mutability":"mutable","name":"proofFlags","nameLocation":"6920:10:0","nodeType":"VariableDeclaration","scope":466,"src":"6904:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":326,"name":"bool","nodeType":"ElementaryTypeName","src":"6904:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":327,"nodeType":"ArrayTypeName","src":"6904:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"leaves","nameLocation":"6957:6:0","nodeType":"VariableDeclaration","scope":466,"src":"6940:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6940:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":330,"nodeType":"ArrayTypeName","src":"6940:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6860:109:0"},"returnParameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"merkleRoot","nameLocation":"7001:10:0","nodeType":"VariableDeclaration","scope":466,"src":"6993:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":333,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6993:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6992:20:0"},"scope":501,"src":"6826:2047:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":488,"nodeType":"Block","src":"8951:75:0","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":475,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"8968:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":476,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"8972:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8968:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":483,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"9014:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":484,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"9017:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":482,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"8999:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8999:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8968:51:0","trueExpression":{"arguments":[{"id":479,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"8991:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":480,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"8994:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":478,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"8976:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":474,"id":487,"nodeType":"Return","src":"8961:58:0"}]},"id":489,"implemented":true,"kind":"function","modifiers":[],"name":"_hashPair","nameLocation":"8888:9:0","nodeType":"FunctionDefinition","parameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"a","nameLocation":"8906:1:0","nodeType":"VariableDeclaration","scope":489,"src":"8898:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8898:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":470,"mutability":"mutable","name":"b","nameLocation":"8917:1:0","nodeType":"VariableDeclaration","scope":489,"src":"8909:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":469,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8909:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8897:22:0"},"returnParameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":489,"src":"8942:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8942:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8941:9:0"},"scope":501,"src":"8879:147:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":499,"nodeType":"Block","src":"9115:178:0","statements":[{"AST":{"nodeType":"YulBlock","src":"9177:110:0","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9198:4:0","type":"","value":"0x00"},{"name":"a","nodeType":"YulIdentifier","src":"9204:1:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9191:6:0"},"nodeType":"YulFunctionCall","src":"9191:15:0"},"nodeType":"YulExpressionStatement","src":"9191:15:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9226:4:0","type":"","value":"0x20"},{"name":"b","nodeType":"YulIdentifier","src":"9232:1:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9219:6:0"},"nodeType":"YulFunctionCall","src":"9219:15:0"},"nodeType":"YulExpressionStatement","src":"9219:15:0"},{"nodeType":"YulAssignment","src":"9247:30:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9266:4:0","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"9272:4:0","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9256:9:0"},"nodeType":"YulFunctionCall","src":"9256:21:0"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9247:5:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":491,"isOffset":false,"isSlot":false,"src":"9204:1:0","valueSize":1},{"declaration":493,"isOffset":false,"isSlot":false,"src":"9232:1:0","valueSize":1},{"declaration":496,"isOffset":false,"isSlot":false,"src":"9247:5:0","valueSize":1}],"id":498,"nodeType":"InlineAssembly","src":"9168:119:0"}]},"id":500,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientHash","nameLocation":"9041:14:0","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"a","nameLocation":"9064:1:0","nodeType":"VariableDeclaration","scope":500,"src":"9056:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9056:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":493,"mutability":"mutable","name":"b","nameLocation":"9075:1:0","nodeType":"VariableDeclaration","scope":500,"src":"9067:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9067:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9055:22:0"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"value","nameLocation":"9108:5:0","nodeType":"VariableDeclaration","scope":500,"src":"9100:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9100:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9099:15:0"},"scope":501,"src":"9032:261:0","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":502,"src":"802:8493:0","usedErrors":[]}],"src":"118:9178:0"},"id":0},"contracts/MarkleTest.sol":{"ast":{"absolutePath":"contracts/MarkleTest.sol","exportedSymbols":{"MerkleProof":[501],"MerkleTest":[539]},"id":540,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":503,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"39:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":504,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":540,"sourceUnit":502,"src":"139:68:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleTest","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":539,"linearizedBaseContracts":[539],"name":"MerkleTest","nameLocation":"218:10:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"ebf0c717","id":507,"mutability":"mutable","name":"root","nameLocation":"270:4:1","nodeType":"VariableDeclaration","scope":539,"src":"255:88:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":505,"name":"bytes32","nodeType":"ElementaryTypeName","src":"255:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834626564613938316339643334663264643039393133316265363034396131643837363736643232376536336634613430396565363239303433333134623466","id":506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"277:66:1","typeDescriptions":{"typeIdentifier":"t_rational_34343376292317882108291733003492265485267387450005846332195010133708854348623_by_1","typeString":"int_const 3434...(69 digits omitted)...8623"},"value":"0x4beda981c9d34f2dd099131be6049a1d87676d227e63f4a409ee629043314b4f"},"visibility":"public"},{"body":{"id":537,"nodeType":"Block","src":"433:205:1","statements":[{"assignments":[516],"declarations":[{"constant":false,"id":516,"mutability":"mutable","name":"leaf","nameLocation":"451:4:1","nodeType":"VariableDeclaration","scope":537,"src":"443:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":515,"name":"bytes32","nodeType":"ElementaryTypeName","src":"443:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":524,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":520,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"485:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"489:6:1","memberName":"sender","nodeType":"MemberAccess","src":"485:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":518,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"468:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"472:12:1","memberName":"encodePacked","nodeType":"MemberAccess","src":"468:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"468:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":517,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"458:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"458:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"443:54:1"},{"expression":{"arguments":[{"arguments":[{"id":528,"name":"_merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"534:12:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":529,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"548:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":530,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"554:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":526,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"515:11:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$501_$","typeString":"type(library MerkleProof)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"527:6:1","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":23,"src":"515:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"515:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f72726563742070726f6f66","id":532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"561:17:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b0563d128c79a0b06d3cfb36a8629ca028933e22049a878a350bc8817a95b38d","typeString":"literal_string \"Incorrect proof\""},"value":"Incorrect proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b0563d128c79a0b06d3cfb36a8629ca028933e22049a878a350bc8817a95b38d","typeString":"literal_string \"Incorrect proof\""}],"id":525,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"507:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"507:72:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":534,"nodeType":"ExpressionStatement","src":"507:72:1"},{"expression":{"hexValue":"74727565","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"596:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":514,"id":536,"nodeType":"Return","src":"589:11:1"}]},"functionSelector":"954d90d0","id":538,"implemented":true,"kind":"function","modifiers":[],"name":"checkValidity","nameLocation":"360:13:1","nodeType":"FunctionDefinition","parameters":{"id":511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"_merkleProof","nameLocation":"393:12:1","nodeType":"VariableDeclaration","scope":538,"src":"374:31:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":509,"nodeType":"ArrayTypeName","src":"374:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"373:33:1"},"returnParameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":538,"src":"428:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":512,"name":"bool","nodeType":"ElementaryTypeName","src":"428:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"427:6:1"},"scope":539,"src":"351:287:1","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":540,"src":"209:432:1","usedErrors":[]}],"src":"39:602:1"},"id":1}},"contracts":{"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d2a153feada95be3c5edb9706b6dd1d247d7839e4031fa1ea53b5b1fc75a945d64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 LOG1 MSTORE8 INVALID 0xAD 0xA9 JUMPDEST 0xE3 0xC5 0xED 0xB9 PUSH17 0x6B6DD1D247D7839E4031FA1EA53B5B1FC7 GAS SWAP5 0x5D PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"802:8493:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d2a153feada95be3c5edb9706b6dd1d247d7839e4031fa1ea53b5b1fc75a945d64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 LOG1 MSTORE8 INVALID 0xAD 0xA9 JUMPDEST 0xE3 0xC5 0xED 0xB9 PUSH17 0x6B6DD1D247D7839E4031FA1EA53B5B1FC7 GAS SWAP5 0x5D PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"802:8493:0:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates merkle trees that are safe against this attack out of the box.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xd466e8b07f4c6220eac16da5127f3ff142e65f0c15c03c7d38f257b02c8585e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6b3cab69f655e40117bbdd8e68d7423f26d1b24248fb189c295f08de8940616\",\"dweb:/ipfs/QmWoyRthsBDMa7gJpH5UCjpa8uNUQfyaGbSgY3uvhBH9F3\"]}},\"version\":1}"}},"contracts/MarkleTest.sol":{"MerkleTest":{"abi":[{"inputs":[{"internalType":"bytes32[]","name":"_merkleProof","type":"bytes32[]"}],"name":"checkValidity","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"root","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60806040527f4beda981c9d34f2dd099131be6049a1d87676d227e63f4a409ee629043314b4f60001b60005534801561003757600080fd5b50610520806100476000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063954d90d01461003b578063ebf0c7171461006b575b600080fd5b61005560048036038101906100509190610271565b610089565b60405161006291906102d9565b60405180910390f35b61007361014d565b604051610080919061030d565b60405180910390f35b6000803360405160200161009d91906103a2565b604051602081830303815290604052805190602001209050610103848480806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505060005483610153565b610142576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101399061041a565b60405180910390fd5b600191505092915050565b60005481565b600082610160858461016a565b1490509392505050565b60008082905060005b84518110156101b5576101a0828683815181106101935761019261043a565b5b60200260200101516101c0565b915080806101ad906104a2565b915050610173565b508091505092915050565b60008183106101d8576101d382846101eb565b6101e3565b6101e283836101eb565b5b905092915050565b600082600052816020526040600020905092915050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126102315761023061020c565b5b8235905067ffffffffffffffff81111561024e5761024d610211565b5b60208301915083602082028301111561026a57610269610216565b5b9250929050565b6000806020838503121561028857610287610202565b5b600083013567ffffffffffffffff8111156102a6576102a5610207565b5b6102b28582860161021b565b92509250509250929050565b60008115159050919050565b6102d3816102be565b82525050565b60006020820190506102ee60008301846102ca565b92915050565b6000819050919050565b610307816102f4565b82525050565b600060208201905061032260008301846102fe565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061035382610328565b9050919050565b60008160601b9050919050565b60006103728261035a565b9050919050565b600061038482610367565b9050919050565b61039c61039782610348565b610379565b82525050565b60006103ae828461038b565b60148201915081905092915050565b600082825260208201905092915050565b7f496e636f72726563742070726f6f660000000000000000000000000000000000600082015250565b6000610404600f836103bd565b915061040f826103ce565b602082019050919050565b60006020820190508181036000830152610433816103f7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b60006104ad82610498565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036104df576104de610469565b5b60018201905091905056fea26469706673582212208b70f8701412672ed0fa03f5335bab952f02f1c7c2fc4381c4915d39915b064164736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x4BEDA981C9D34F2DD099131BE6049A1D87676D227E63F4A409EE629043314B4F PUSH1 0x0 SHL PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x520 DUP1 PUSH2 0x47 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x954D90D0 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xEBF0C717 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x271 JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x14D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x103 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH1 0x0 SLOAD DUP4 PUSH2 0x153 JUMP JUMPDEST PUSH2 0x142 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139 SWAP1 PUSH2 0x41A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x160 DUP6 DUP5 PUSH2 0x16A JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1B5 JUMPI PUSH2 0x1A0 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x193 JUMPI PUSH2 0x192 PUSH2 0x43A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1C0 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x1AD SWAP1 PUSH2 0x4A2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x173 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1D8 JUMPI PUSH2 0x1D3 DUP3 DUP5 PUSH2 0x1EB JUMP JUMPDEST PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x1E2 DUP4 DUP4 PUSH2 0x1EB JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x231 JUMPI PUSH2 0x230 PUSH2 0x20C JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24E JUMPI PUSH2 0x24D PUSH2 0x211 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x26A JUMPI PUSH2 0x269 PUSH2 0x216 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x288 JUMPI PUSH2 0x287 PUSH2 0x202 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x2A5 PUSH2 0x207 JUMP JUMPDEST JUMPDEST PUSH2 0x2B2 DUP6 DUP3 DUP7 ADD PUSH2 0x21B JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D3 DUP2 PUSH2 0x2BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x307 DUP2 PUSH2 0x2F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x322 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x353 DUP3 PUSH2 0x328 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x372 DUP3 PUSH2 0x35A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x384 DUP3 PUSH2 0x367 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39C PUSH2 0x397 DUP3 PUSH2 0x348 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AE DUP3 DUP5 PUSH2 0x38B JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E636F72726563742070726F6F660000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404 PUSH1 0xF DUP4 PUSH2 0x3BD JUMP JUMPDEST SWAP2 POP PUSH2 0x40F DUP3 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x433 DUP2 PUSH2 0x3F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AD DUP3 PUSH2 0x498 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4DF JUMPI PUSH2 0x4DE PUSH2 0x469 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 PUSH17 0xF8701412672ED0FA03F5335BAB952F02F1 0xC7 0xC2 0xFC NUMBER DUP2 0xC4 SWAP2 0x5D CODECOPY SWAP2 JUMPDEST MOD COINBASE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"209:432:1:-:0;;;277:66;255:88;;;;209:432;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_efficientHash_500":{"entryPoint":491,"id":500,"parameterSlots":2,"returnSlots":1},"@_hashPair_489":{"entryPoint":448,"id":489,"parameterSlots":2,"returnSlots":1},"@checkValidity_538":{"entryPoint":137,"id":538,"parameterSlots":2,"returnSlots":1},"@processProof_84":{"entryPoint":362,"id":84,"parameterSlots":2,"returnSlots":1},"@root_507":{"entryPoint":333,"id":507,"parameterSlots":0,"returnSlots":0},"@verify_23":{"entryPoint":339,"id":23,"parameterSlots":3,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":539,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":625,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":907,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":714,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":766,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_b0563d128c79a0b06d3cfb36a8629ca028933e22049a878a350bc8817a95b38d_to_t_string_memory_ptr_fromStack":{"entryPoint":1015,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":930,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":729,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":781,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b0563d128c79a0b06d3cfb36a8629ca028933e22049a878a350bc8817a95b38d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1050,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":957,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":840,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":702,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":756,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":808,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1176,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":1186,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":889,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":871,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1129,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":1082,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":529,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":524,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":534,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":519,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":514,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_96":{"entryPoint":858,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_b0563d128c79a0b06d3cfb36a8629ca028933e22049a878a350bc8817a95b38d":{"entryPoint":974,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5520:2","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:2","statements":[{"nodeType":"YulAssignment","src":"57:19:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:2","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:2"},"nodeType":"YulFunctionCall","src":"67:9:2"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:2"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:2","type":""}],"src":"7:75:2"},{"body":{"nodeType":"YulBlock","src":"177:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:2"},"nodeType":"YulFunctionCall","src":"187:12:2"},"nodeType":"YulExpressionStatement","src":"187:12:2"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:2"},{"body":{"nodeType":"YulBlock","src":"300:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:2"},"nodeType":"YulFunctionCall","src":"310:12:2"},"nodeType":"YulExpressionStatement","src":"310:12:2"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:2"},{"body":{"nodeType":"YulBlock","src":"423:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:2"},"nodeType":"YulFunctionCall","src":"433:12:2"},"nodeType":"YulExpressionStatement","src":"433:12:2"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:2"},{"body":{"nodeType":"YulBlock","src":"546:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:2"},"nodeType":"YulFunctionCall","src":"556:12:2"},"nodeType":"YulExpressionStatement","src":"556:12:2"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"457:117:2"},{"body":{"nodeType":"YulBlock","src":"669:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"686:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"689:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"679:6:2"},"nodeType":"YulFunctionCall","src":"679:12:2"},"nodeType":"YulExpressionStatement","src":"679:12:2"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"580:117:2"},{"body":{"nodeType":"YulBlock","src":"810:478:2","statements":[{"body":{"nodeType":"YulBlock","src":"859:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"861:77:2"},"nodeType":"YulFunctionCall","src":"861:79:2"},"nodeType":"YulExpressionStatement","src":"861:79:2"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"838:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"846:4:2","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"834:3:2"},"nodeType":"YulFunctionCall","src":"834:17:2"},{"name":"end","nodeType":"YulIdentifier","src":"853:3:2"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"830:3:2"},"nodeType":"YulFunctionCall","src":"830:27:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"823:6:2"},"nodeType":"YulFunctionCall","src":"823:35:2"},"nodeType":"YulIf","src":"820:122:2"},{"nodeType":"YulAssignment","src":"951:30:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"974:6:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:2"},"nodeType":"YulFunctionCall","src":"961:20:2"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"951:6:2"}]},{"body":{"nodeType":"YulBlock","src":"1024:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"1026:77:2"},"nodeType":"YulFunctionCall","src":"1026:79:2"},"nodeType":"YulExpressionStatement","src":"1026:79:2"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"996:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"1004:18:2","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"993:2:2"},"nodeType":"YulFunctionCall","src":"993:30:2"},"nodeType":"YulIf","src":"990:117:2"},{"nodeType":"YulAssignment","src":"1116:29:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1132:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"1140:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1128:3:2"},"nodeType":"YulFunctionCall","src":"1128:17:2"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1116:8:2"}]},{"body":{"nodeType":"YulBlock","src":"1199:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"1201:77:2"},"nodeType":"YulFunctionCall","src":"1201:79:2"},"nodeType":"YulExpressionStatement","src":"1201:79:2"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1164:8:2"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1178:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"1186:4:2","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1174:3:2"},"nodeType":"YulFunctionCall","src":"1174:17:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1160:3:2"},"nodeType":"YulFunctionCall","src":"1160:32:2"},{"name":"end","nodeType":"YulIdentifier","src":"1194:3:2"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1157:2:2"},"nodeType":"YulFunctionCall","src":"1157:41:2"},"nodeType":"YulIf","src":"1154:128:2"}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"777:6:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"785:3:2","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"793:8:2","type":""},{"name":"length","nodeType":"YulTypedName","src":"803:6:2","type":""}],"src":"720:568:2"},{"body":{"nodeType":"YulBlock","src":"1395:458:2","statements":[{"body":{"nodeType":"YulBlock","src":"1441:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1443:77:2"},"nodeType":"YulFunctionCall","src":"1443:79:2"},"nodeType":"YulExpressionStatement","src":"1443:79:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1416:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"1425:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1412:3:2"},"nodeType":"YulFunctionCall","src":"1412:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"1437:2:2","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1408:3:2"},"nodeType":"YulFunctionCall","src":"1408:32:2"},"nodeType":"YulIf","src":"1405:119:2"},{"nodeType":"YulBlock","src":"1534:312:2","statements":[{"nodeType":"YulVariableDeclaration","src":"1549:45:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1580:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1591:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1576:3:2"},"nodeType":"YulFunctionCall","src":"1576:17:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1563:12:2"},"nodeType":"YulFunctionCall","src":"1563:31:2"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1553:6:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"1641:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1643:77:2"},"nodeType":"YulFunctionCall","src":"1643:79:2"},"nodeType":"YulExpressionStatement","src":"1643:79:2"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1613:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"1621:18:2","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1610:2:2"},"nodeType":"YulFunctionCall","src":"1610:30:2"},"nodeType":"YulIf","src":"1607:117:2"},{"nodeType":"YulAssignment","src":"1738:98:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1808:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"1819:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1804:3:2"},"nodeType":"YulFunctionCall","src":"1804:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1828:7:2"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"1756:47:2"},"nodeType":"YulFunctionCall","src":"1756:80:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1738:6:2"},{"name":"value1","nodeType":"YulIdentifier","src":"1746:6:2"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1357:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1368:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1380:6:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1388:6:2","type":""}],"src":"1294:559:2"},{"body":{"nodeType":"YulBlock","src":"1901:48:2","statements":[{"nodeType":"YulAssignment","src":"1911:32:2","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1936:5:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1929:6:2"},"nodeType":"YulFunctionCall","src":"1929:13:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1922:6:2"},"nodeType":"YulFunctionCall","src":"1922:21:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1911:7:2"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1883:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1893:7:2","type":""}],"src":"1859:90:2"},{"body":{"nodeType":"YulBlock","src":"2014:50:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2031:3:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2051:5:2"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2036:14:2"},"nodeType":"YulFunctionCall","src":"2036:21:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2024:6:2"},"nodeType":"YulFunctionCall","src":"2024:34:2"},"nodeType":"YulExpressionStatement","src":"2024:34:2"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2002:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2009:3:2","type":""}],"src":"1955:109:2"},{"body":{"nodeType":"YulBlock","src":"2162:118:2","statements":[{"nodeType":"YulAssignment","src":"2172:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2184:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2195:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2180:3:2"},"nodeType":"YulFunctionCall","src":"2180:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2172:4:2"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2246:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2259:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2270:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2255:3:2"},"nodeType":"YulFunctionCall","src":"2255:17:2"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"2208:37:2"},"nodeType":"YulFunctionCall","src":"2208:65:2"},"nodeType":"YulExpressionStatement","src":"2208:65:2"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2134:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2146:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2157:4:2","type":""}],"src":"2070:210:2"},{"body":{"nodeType":"YulBlock","src":"2331:32:2","statements":[{"nodeType":"YulAssignment","src":"2341:16:2","value":{"name":"value","nodeType":"YulIdentifier","src":"2352:5:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2341:7:2"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2313:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2323:7:2","type":""}],"src":"2286:77:2"},{"body":{"nodeType":"YulBlock","src":"2434:53:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2451:3:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2474:5:2"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2456:17:2"},"nodeType":"YulFunctionCall","src":"2456:24:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2444:6:2"},"nodeType":"YulFunctionCall","src":"2444:37:2"},"nodeType":"YulExpressionStatement","src":"2444:37:2"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2422:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2429:3:2","type":""}],"src":"2369:118:2"},{"body":{"nodeType":"YulBlock","src":"2591:124:2","statements":[{"nodeType":"YulAssignment","src":"2601:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2613:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2624:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2609:3:2"},"nodeType":"YulFunctionCall","src":"2609:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2601:4:2"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2681:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2694:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2705:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:2"},"nodeType":"YulFunctionCall","src":"2690:17:2"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"2637:43:2"},"nodeType":"YulFunctionCall","src":"2637:71:2"},"nodeType":"YulExpressionStatement","src":"2637:71:2"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2563:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2575:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2586:4:2","type":""}],"src":"2493:222:2"},{"body":{"nodeType":"YulBlock","src":"2766:81:2","statements":[{"nodeType":"YulAssignment","src":"2776:65:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2791:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"2798:42:2","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2787:3:2"},"nodeType":"YulFunctionCall","src":"2787:54:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2776:7:2"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2748:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2758:7:2","type":""}],"src":"2721:126:2"},{"body":{"nodeType":"YulBlock","src":"2898:51:2","statements":[{"nodeType":"YulAssignment","src":"2908:35:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2937:5:2"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2919:17:2"},"nodeType":"YulFunctionCall","src":"2919:24:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2908:7:2"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2880:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2890:7:2","type":""}],"src":"2853:96:2"},{"body":{"nodeType":"YulBlock","src":"2997:52:2","statements":[{"nodeType":"YulAssignment","src":"3007:35:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3032:2:2","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"3036:5:2"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3028:3:2"},"nodeType":"YulFunctionCall","src":"3028:14:2"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3007:8:2"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2978:5:2","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"2988:8:2","type":""}],"src":"2955:94:2"},{"body":{"nodeType":"YulBlock","src":"3102:47:2","statements":[{"nodeType":"YulAssignment","src":"3112:31:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3137:5:2"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"3123:13:2"},"nodeType":"YulFunctionCall","src":"3123:20:2"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"3112:7:2"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3084:5:2","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"3094:7:2","type":""}],"src":"3055:94:2"},{"body":{"nodeType":"YulBlock","src":"3202:53:2","statements":[{"nodeType":"YulAssignment","src":"3212:37:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3243:5:2"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"3223:19:2"},"nodeType":"YulFunctionCall","src":"3223:26:2"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"3212:7:2"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3184:5:2","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"3194:7:2","type":""}],"src":"3155:100:2"},{"body":{"nodeType":"YulBlock","src":"3344:74:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3361:3:2"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3404:5:2"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3386:17:2"},"nodeType":"YulFunctionCall","src":"3386:24:2"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"3366:19:2"},"nodeType":"YulFunctionCall","src":"3366:45:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3354:6:2"},"nodeType":"YulFunctionCall","src":"3354:58:2"},"nodeType":"YulExpressionStatement","src":"3354:58:2"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3332:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3339:3:2","type":""}],"src":"3261:157:2"},{"body":{"nodeType":"YulBlock","src":"3540:140:2","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3613:6:2"},{"name":"pos","nodeType":"YulIdentifier","src":"3622:3:2"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"3551:61:2"},"nodeType":"YulFunctionCall","src":"3551:75:2"},"nodeType":"YulExpressionStatement","src":"3551:75:2"},{"nodeType":"YulAssignment","src":"3635:19:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3646:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"3651:2:2","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3642:3:2"},"nodeType":"YulFunctionCall","src":"3642:12:2"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3635:3:2"}]},{"nodeType":"YulAssignment","src":"3664:10:2","value":{"name":"pos","nodeType":"YulIdentifier","src":"3671:3:2"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3664:3:2"}]}]},"name":"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3519:3:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3525:6:2","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3536:3:2","type":""}],"src":"3424:256:2"},{"body":{"nodeType":"YulBlock","src":"3782:73:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3799:3:2"},{"name":"length","nodeType":"YulIdentifier","src":"3804:6:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3792:6:2"},"nodeType":"YulFunctionCall","src":"3792:19:2"},"nodeType":"YulExpressionStatement","src":"3792:19:2"},{"nodeType":"YulAssignment","src":"3820:29:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3839:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"3844:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3835:3:2"},"nodeType":"YulFunctionCall","src":"3835:14:2"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3820:11:2"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3754:3:2","type":""},{"name":"length","nodeType":"YulTypedName","src":"3759:6:2","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3770:11:2","type":""}],"src":"3686:169:2"},{"body":{"nodeType":"YulBlock","src":"3967:59:2","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3989:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"3997:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3985:3:2"},"nodeType":"YulFunctionCall","src":"3985:14:2"},{"hexValue":"496e636f72726563742070726f6f66","kind":"string","nodeType":"YulLiteral","src":"4001:17:2","type":"","value":"Incorrect proof"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3978:6:2"},"nodeType":"YulFunctionCall","src":"3978:41:2"},"nodeType":"YulExpressionStatement","src":"3978:41:2"}]},"name":"store_literal_in_memory_b0563d128c79a0b06d3cfb36a8629ca028933e22049a878a350bc8817a95b38d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3959:6:2","type":""}],"src":"3861:165:2"},{"body":{"nodeType":"YulBlock","src":"4178:220:2","statements":[{"nodeType":"YulAssignment","src":"4188:74:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4254:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"4259:2:2","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4195:58:2"},"nodeType":"YulFunctionCall","src":"4195:67:2"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4188:3:2"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4360:3:2"}],"functionName":{"name":"store_literal_in_memory_b0563d128c79a0b06d3cfb36a8629ca028933e22049a878a350bc8817a95b38d","nodeType":"YulIdentifier","src":"4271:88:2"},"nodeType":"YulFunctionCall","src":"4271:93:2"},"nodeType":"YulExpressionStatement","src":"4271:93:2"},{"nodeType":"YulAssignment","src":"4373:19:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4384:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"4389:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4380:3:2"},"nodeType":"YulFunctionCall","src":"4380:12:2"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4373:3:2"}]}]},"name":"abi_encode_t_stringliteral_b0563d128c79a0b06d3cfb36a8629ca028933e22049a878a350bc8817a95b38d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4166:3:2","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4174:3:2","type":""}],"src":"4032:366:2"},{"body":{"nodeType":"YulBlock","src":"4575:248:2","statements":[{"nodeType":"YulAssignment","src":"4585:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4597:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"4608:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4593:3:2"},"nodeType":"YulFunctionCall","src":"4593:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4585:4:2"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4632:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"4643:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4628:3:2"},"nodeType":"YulFunctionCall","src":"4628:17:2"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4651:4:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"4657:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4647:3:2"},"nodeType":"YulFunctionCall","src":"4647:20:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4621:6:2"},"nodeType":"YulFunctionCall","src":"4621:47:2"},"nodeType":"YulExpressionStatement","src":"4621:47:2"},{"nodeType":"YulAssignment","src":"4677:139:2","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4811:4:2"}],"functionName":{"name":"abi_encode_t_stringliteral_b0563d128c79a0b06d3cfb36a8629ca028933e22049a878a350bc8817a95b38d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4685:124:2"},"nodeType":"YulFunctionCall","src":"4685:131:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4677:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_b0563d128c79a0b06d3cfb36a8629ca028933e22049a878a350bc8817a95b38d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4555:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4570:4:2","type":""}],"src":"4404:419:2"},{"body":{"nodeType":"YulBlock","src":"4857:152:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4874:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4877:77:2","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4867:6:2"},"nodeType":"YulFunctionCall","src":"4867:88:2"},"nodeType":"YulExpressionStatement","src":"4867:88:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4971:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4974:4:2","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4964:6:2"},"nodeType":"YulFunctionCall","src":"4964:15:2"},"nodeType":"YulExpressionStatement","src":"4964:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4995:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4998:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4988:6:2"},"nodeType":"YulFunctionCall","src":"4988:15:2"},"nodeType":"YulExpressionStatement","src":"4988:15:2"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"4829:180:2"},{"body":{"nodeType":"YulBlock","src":"5043:152:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5060:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5063:77:2","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5053:6:2"},"nodeType":"YulFunctionCall","src":"5053:88:2"},"nodeType":"YulExpressionStatement","src":"5053:88:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5157:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5160:4:2","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5150:6:2"},"nodeType":"YulFunctionCall","src":"5150:15:2"},"nodeType":"YulExpressionStatement","src":"5150:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5181:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5184:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5174:6:2"},"nodeType":"YulFunctionCall","src":"5174:15:2"},"nodeType":"YulExpressionStatement","src":"5174:15:2"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5015:180:2"},{"body":{"nodeType":"YulBlock","src":"5246:32:2","statements":[{"nodeType":"YulAssignment","src":"5256:16:2","value":{"name":"value","nodeType":"YulIdentifier","src":"5267:5:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5256:7:2"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5228:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5238:7:2","type":""}],"src":"5201:77:2"},{"body":{"nodeType":"YulBlock","src":"5327:190:2","statements":[{"nodeType":"YulAssignment","src":"5337:33:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5364:5:2"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5346:17:2"},"nodeType":"YulFunctionCall","src":"5346:24:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5337:5:2"}]},{"body":{"nodeType":"YulBlock","src":"5460:22:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5462:16:2"},"nodeType":"YulFunctionCall","src":"5462:18:2"},"nodeType":"YulExpressionStatement","src":"5462:18:2"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5385:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"5392:66:2","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5382:2:2"},"nodeType":"YulFunctionCall","src":"5382:77:2"},"nodeType":"YulIf","src":"5379:103:2"},{"nodeType":"YulAssignment","src":"5491:20:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5502:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"5509:1:2","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5498:3:2"},"nodeType":"YulFunctionCall","src":"5498:13:2"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5491:3:2"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5313:5:2","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5323:3:2","type":""}],"src":"5284:233:2"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b0563d128c79a0b06d3cfb36a8629ca028933e22049a878a350bc8817a95b38d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect proof\")\n\n    }\n\n    function abi_encode_t_stringliteral_b0563d128c79a0b06d3cfb36a8629ca028933e22049a878a350bc8817a95b38d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_b0563d128c79a0b06d3cfb36a8629ca028933e22049a878a350bc8817a95b38d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b0563d128c79a0b06d3cfb36a8629ca028933e22049a878a350bc8817a95b38d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b0563d128c79a0b06d3cfb36a8629ca028933e22049a878a350bc8817a95b38d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n","id":2,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100365760003560e01c8063954d90d01461003b578063ebf0c7171461006b575b600080fd5b61005560048036038101906100509190610271565b610089565b60405161006291906102d9565b60405180910390f35b61007361014d565b604051610080919061030d565b60405180910390f35b6000803360405160200161009d91906103a2565b604051602081830303815290604052805190602001209050610103848480806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505060005483610153565b610142576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101399061041a565b60405180910390fd5b600191505092915050565b60005481565b600082610160858461016a565b1490509392505050565b60008082905060005b84518110156101b5576101a0828683815181106101935761019261043a565b5b60200260200101516101c0565b915080806101ad906104a2565b915050610173565b508091505092915050565b60008183106101d8576101d382846101eb565b6101e3565b6101e283836101eb565b5b905092915050565b600082600052816020526040600020905092915050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126102315761023061020c565b5b8235905067ffffffffffffffff81111561024e5761024d610211565b5b60208301915083602082028301111561026a57610269610216565b5b9250929050565b6000806020838503121561028857610287610202565b5b600083013567ffffffffffffffff8111156102a6576102a5610207565b5b6102b28582860161021b565b92509250509250929050565b60008115159050919050565b6102d3816102be565b82525050565b60006020820190506102ee60008301846102ca565b92915050565b6000819050919050565b610307816102f4565b82525050565b600060208201905061032260008301846102fe565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061035382610328565b9050919050565b60008160601b9050919050565b60006103728261035a565b9050919050565b600061038482610367565b9050919050565b61039c61039782610348565b610379565b82525050565b60006103ae828461038b565b60148201915081905092915050565b600082825260208201905092915050565b7f496e636f72726563742070726f6f660000000000000000000000000000000000600082015250565b6000610404600f836103bd565b915061040f826103ce565b602082019050919050565b60006020820190508181036000830152610433816103f7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b60006104ad82610498565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036104df576104de610469565b5b60018201905091905056fea26469706673582212208b70f8701412672ed0fa03f5335bab952f02f1c7c2fc4381c4915d39915b064164736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x954D90D0 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xEBF0C717 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x271 JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x14D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x103 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH1 0x0 SLOAD DUP4 PUSH2 0x153 JUMP JUMPDEST PUSH2 0x142 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139 SWAP1 PUSH2 0x41A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x160 DUP6 DUP5 PUSH2 0x16A JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1B5 JUMPI PUSH2 0x1A0 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x193 JUMPI PUSH2 0x192 PUSH2 0x43A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1C0 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x1AD SWAP1 PUSH2 0x4A2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x173 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1D8 JUMPI PUSH2 0x1D3 DUP3 DUP5 PUSH2 0x1EB JUMP JUMPDEST PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x1E2 DUP4 DUP4 PUSH2 0x1EB JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x231 JUMPI PUSH2 0x230 PUSH2 0x20C JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24E JUMPI PUSH2 0x24D PUSH2 0x211 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x26A JUMPI PUSH2 0x269 PUSH2 0x216 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x288 JUMPI PUSH2 0x287 PUSH2 0x202 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x2A5 PUSH2 0x207 JUMP JUMPDEST JUMPDEST PUSH2 0x2B2 DUP6 DUP3 DUP7 ADD PUSH2 0x21B JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D3 DUP2 PUSH2 0x2BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x307 DUP2 PUSH2 0x2F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x322 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x353 DUP3 PUSH2 0x328 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x372 DUP3 PUSH2 0x35A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x384 DUP3 PUSH2 0x367 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39C PUSH2 0x397 DUP3 PUSH2 0x348 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AE DUP3 DUP5 PUSH2 0x38B JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E636F72726563742070726F6F660000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404 PUSH1 0xF DUP4 PUSH2 0x3BD JUMP JUMPDEST SWAP2 POP PUSH2 0x40F DUP3 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x433 DUP2 PUSH2 0x3F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AD DUP3 PUSH2 0x498 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4DF JUMPI PUSH2 0x4DE PUSH2 0x469 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 PUSH17 0xF8701412672ED0FA03F5335BAB952F02F1 0xC7 0xC2 0xFC NUMBER DUP2 0xC4 SWAP2 0x5D CODECOPY SWAP2 JUMPDEST MOD COINBASE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"209:432:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;351:287;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;255:88;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;351:287;428:4;443:12;485:10;468:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;458:39;;;;;;443:54;;515:44;534:12;;515:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;548:4;;554;515:18;:44::i;:::-;507:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;596:4;589:11;;;351:287;;;;:::o;255:88::-;;;;:::o;1156:184:0:-;1277:4;1329;1300:25;1313:5;1320:4;1300:12;:25::i;:::-;:33;1293:40;;1156:184;;;;;:::o;1994:290::-;2077:7;2096:20;2119:4;2096:27;;2138:9;2133:116;2157:5;:12;2153:1;:16;2133:116;;;2205:33;2215:12;2229:5;2235:1;2229:8;;;;;;;;:::i;:::-;;;;;;;;2205:9;:33::i;:::-;2190:48;;2171:3;;;;;:::i;:::-;;;;2133:116;;;;2265:12;2258:19;;;1994:290;;;;:::o;8879:147::-;8942:7;8972:1;8968;:5;:51;;8999:20;9014:1;9017;8999:14;:20::i;:::-;8968:51;;;8976:20;8991:1;8994;8976:14;:20::i;:::-;8968:51;8961:58;;8879:147;;;;:::o;9032:261::-;9100:13;9204:1;9198:4;9191:15;9232:1;9226:4;9219:15;9272:4;9266;9256:21;9247:30;;9032:261;;;;:::o;88:117:2:-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:117;689:1;686;679:12;720:568;793:8;803:6;853:3;846:4;838:6;834:17;830:27;820:122;;861:79;;:::i;:::-;820:122;974:6;961:20;951:30;;1004:18;996:6;993:30;990:117;;;1026:79;;:::i;:::-;990:117;1140:4;1132:6;1128:17;1116:29;;1194:3;1186:4;1178:6;1174:17;1164:8;1160:32;1157:41;1154:128;;;1201:79;;:::i;:::-;1154:128;720:568;;;;;:::o;1294:559::-;1380:6;1388;1437:2;1425:9;1416:7;1412:23;1408:32;1405:119;;;1443:79;;:::i;:::-;1405:119;1591:1;1580:9;1576:17;1563:31;1621:18;1613:6;1610:30;1607:117;;;1643:79;;:::i;:::-;1607:117;1756:80;1828:7;1819:6;1808:9;1804:22;1756:80;:::i;:::-;1738:98;;;;1534:312;1294:559;;;;;:::o;1859:90::-;1893:7;1936:5;1929:13;1922:21;1911:32;;1859:90;;;:::o;1955:109::-;2036:21;2051:5;2036:21;:::i;:::-;2031:3;2024:34;1955:109;;:::o;2070:210::-;2157:4;2195:2;2184:9;2180:18;2172:26;;2208:65;2270:1;2259:9;2255:17;2246:6;2208:65;:::i;:::-;2070:210;;;;:::o;2286:77::-;2323:7;2352:5;2341:16;;2286:77;;;:::o;2369:118::-;2456:24;2474:5;2456:24;:::i;:::-;2451:3;2444:37;2369:118;;:::o;2493:222::-;2586:4;2624:2;2613:9;2609:18;2601:26;;2637:71;2705:1;2694:9;2690:17;2681:6;2637:71;:::i;:::-;2493:222;;;;:::o;2721:126::-;2758:7;2798:42;2791:5;2787:54;2776:65;;2721:126;;;:::o;2853:96::-;2890:7;2919:24;2937:5;2919:24;:::i;:::-;2908:35;;2853:96;;;:::o;2955:94::-;2988:8;3036:5;3032:2;3028:14;3007:35;;2955:94;;;:::o;3055:::-;3094:7;3123:20;3137:5;3123:20;:::i;:::-;3112:31;;3055:94;;;:::o;3155:100::-;3194:7;3223:26;3243:5;3223:26;:::i;:::-;3212:37;;3155:100;;;:::o;3261:157::-;3366:45;3386:24;3404:5;3386:24;:::i;:::-;3366:45;:::i;:::-;3361:3;3354:58;3261:157;;:::o;3424:256::-;3536:3;3551:75;3622:3;3613:6;3551:75;:::i;:::-;3651:2;3646:3;3642:12;3635:19;;3671:3;3664:10;;3424:256;;;;:::o;3686:169::-;3770:11;3804:6;3799:3;3792:19;3844:4;3839:3;3835:14;3820:29;;3686:169;;;;:::o;3861:165::-;4001:17;3997:1;3989:6;3985:14;3978:41;3861:165;:::o;4032:366::-;4174:3;4195:67;4259:2;4254:3;4195:67;:::i;:::-;4188:74;;4271:93;4360:3;4271:93;:::i;:::-;4389:2;4384:3;4380:12;4373:19;;4032:366;;;:::o;4404:419::-;4570:4;4608:2;4597:9;4593:18;4585:26;;4657:9;4651:4;4647:20;4643:1;4632:9;4628:17;4621:47;4685:131;4811:4;4685:131;:::i;:::-;4677:139;;4404:419;;;:::o;4829:180::-;4877:77;4874:1;4867:88;4974:4;4971:1;4964:15;4998:4;4995:1;4988:15;5015:180;5063:77;5060:1;5053:88;5160:4;5157:1;5150:15;5184:4;5181:1;5174:15;5201:77;5238:7;5267:5;5256:16;;5201:77;;;:::o;5284:233::-;5323:3;5346:24;5364:5;5346:24;:::i;:::-;5337:33;;5392:66;5385:5;5382:77;5379:103;;5462:18;;:::i;:::-;5379:103;5509:1;5502:5;5498:13;5491:20;;5284:233;;;:::o"},"methodIdentifiers":{"checkValidity(bytes32[])":"954d90d0","root()":"ebf0c717"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"checkValidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"root\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MarkleTest.sol\":\"MerkleTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xd466e8b07f4c6220eac16da5127f3ff142e65f0c15c03c7d38f257b02c8585e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6b3cab69f655e40117bbdd8e68d7423f26d1b24248fb189c295f08de8940616\",\"dweb:/ipfs/QmWoyRthsBDMa7gJpH5UCjpa8uNUQfyaGbSgY3uvhBH9F3\"]},\"contracts/MarkleTest.sol\":{\"keccak256\":\"0x46e11ab0d5bae307c1a3e387b7e03c9af4b6ed68cb13247b79317768517c30a7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c981207a65c00763dba764eab5154afb95d2ad56b1eb5f53d91dc811a00b7e4c\",\"dweb:/ipfs/Qmeg8bMVUcK3wWV9Yqg11W4UHvb4SUgZPz3TALj88f4epP\"]}},\"version\":1}"}}}}}